#pragma once

#define XIEITE_CPLR_TYPE_ACC 0
#define XIEITE_CPLR_MAJOR_ACC 0
#define XIEITE_CPLR_MINOR_ACC 0
#define XIEITE_CPLR_PATCH_ACC 0
#define XIEITE_CPLR_TYPE_ACK 0
#define XIEITE_CPLR_MAJOR_ACK 0
#define XIEITE_CPLR_MINOR_ACK 0
#define XIEITE_CPLR_PATCH_ACK 0
#define XIEITE_CPLR_TYPE_ALTIUM_C_TO_HARDWARE 0
#define XIEITE_CPLR_MAJOR_ALTIUM_C_TO_HARDWARE 0
#define XIEITE_CPLR_MINOR_ALTIUM_C_TO_HARDWARE 0
#define XIEITE_CPLR_PATCH_ALTIUM_C_TO_HARDWARE 0
#define XIEITE_CPLR_TYPE_ALTIUM_MICROBLAZE_C 0
#define XIEITE_CPLR_MAJOR_ALTIUM_MICROBLAZE_C 0
#define XIEITE_CPLR_MINOR_ALTIUM_MICROBLAZE_C 0
#define XIEITE_CPLR_PATCH_ALTIUM_MICROBLAZE_C 0
#define XIEITE_CPLR_TYPE_AOCC 0
#define XIEITE_CPLR_MAJOR_AOCC 0
#define XIEITE_CPLR_MINOR_AOCC 0
#define XIEITE_CPLR_PATCH_AOCC 0
#define XIEITE_CPLR_TYPE_ARMCC 0
#define XIEITE_CPLR_MAJOR_ARMCC 0
#define XIEITE_CPLR_MINOR_ARMCC 0
#define XIEITE_CPLR_PATCH_ARMCC 0
#define XIEITE_CPLR_TYPE_AZTEC_C 0
#define XIEITE_CPLR_MAJOR_AZTEC_C 0
#define XIEITE_CPLR_MINOR_AZTEC_C 0
#define XIEITE_CPLR_PATCH_AZTEC_C 0
#define XIEITE_CPLR_TYPE_BORLAND 0
#define XIEITE_CPLR_MAJOR_BORLAND 0
#define XIEITE_CPLR_MINOR_BORLAND 0
#define XIEITE_CPLR_PATCH_BORLAND 0
#define XIEITE_CPLR_TYPE_CC65 0
#define XIEITE_CPLR_MAJOR_CC65 0
#define XIEITE_CPLR_MINOR_CC65 0
#define XIEITE_CPLR_PATCH_CC65 0
#define XIEITE_CPLR_TYPE_CIRCLE 0
#define XIEITE_CPLR_MAJOR_CIRCLE 0
#define XIEITE_CPLR_MINOR_CIRCLE 0
#define XIEITE_CPLR_PATCH_CIRCLE 0
#define XIEITE_CPLR_TYPE_CLANG 0
#define XIEITE_CPLR_MAJOR_CLANG 0
#define XIEITE_CPLR_MINOR_CLANG 0
#define XIEITE_CPLR_PATCH_CLANG 0
#define XIEITE_CPLR_TYPE_COMEAU 0
#define XIEITE_CPLR_MAJOR_COMEAU 0
#define XIEITE_CPLR_MINOR_COMEAU 0
#define XIEITE_CPLR_PATCH_COMEAU 0
#define XIEITE_CPLR_TYPE_COMPAQ_C 0
#define XIEITE_CPLR_MAJOR_COMPAQ_C 0
#define XIEITE_CPLR_MINOR_COMPAQ_C 0
#define XIEITE_CPLR_PATCH_COMPAQ_C 0
#define XIEITE_CPLR_TYPE_COMPAQ_CPP 0
#define XIEITE_CPLR_MAJOR_COMPAQ_CPP 0
#define XIEITE_CPLR_MINOR_COMPAQ_CPP 0
#define XIEITE_CPLR_PATCH_COMPAQ_CPP 0
#define XIEITE_CPLR_TYPE_COMPCERT 0
#define XIEITE_CPLR_MAJOR_COMPCERT 0
#define XIEITE_CPLR_MINOR_COMPCERT 0
#define XIEITE_CPLR_PATCH_COMPCERT 0
#define XIEITE_CPLR_TYPE_CONVEX_C 0
#define XIEITE_CPLR_MAJOR_CONVEX_C 0
#define XIEITE_CPLR_MINOR_CONVEX_C 0
#define XIEITE_CPLR_PATCH_CONVEX_C 0
#define XIEITE_CPLR_TYPE_COVERITY_STATIC_ANALYZER 0
#define XIEITE_CPLR_MAJOR_COVERITY_STATIC_ANALYZER 0
#define XIEITE_CPLR_MINOR_COVERITY_STATIC_ANALYZER 0
#define XIEITE_CPLR_PATCH_COVERITY_STATIC_ANALYZER 0
#define XIEITE_CPLR_TYPE_CRAY 0
#define XIEITE_CPLR_MAJOR_CRAY 0
#define XIEITE_CPLR_MINOR_CRAY 0
#define XIEITE_CPLR_PATCH_CRAY 0
#define XIEITE_CPLR_TYPE_DIGITAL_MARS 0
#define XIEITE_CPLR_MAJOR_DIGITAL_MARS 0
#define XIEITE_CPLR_MINOR_DIGITAL_MARS 0
#define XIEITE_CPLR_PATCH_DIGITAL_MARS 0
#define XIEITE_CPLR_TYPE_DICE_C 0
#define XIEITE_CPLR_MAJOR_DICE_C 0
#define XIEITE_CPLR_MINOR_DICE_C 0
#define XIEITE_CPLR_PATCH_DICE_C 0
#define XIEITE_CPLR_TYPE_DIGNUS_SYSTEMS_CPP 0
#define XIEITE_CPLR_MAJOR_DIGNUS_SYSTEMS_CPP 0
#define XIEITE_CPLR_MINOR_DIGNUS_SYSTEMS_CPP 0
#define XIEITE_CPLR_PATCH_DIGNUS_SYSTEMS_CPP 0
#define XIEITE_CPLR_TYPE_DJGPP 0
#define XIEITE_CPLR_MAJOR_DJGPP 0
#define XIEITE_CPLR_MINOR_DJGPP 0
#define XIEITE_CPLR_PATCH_DJGPP 0
#define XIEITE_CPLR_TYPE_EDG 0
#define XIEITE_CPLR_MAJOR_EDG 0
#define XIEITE_CPLR_MINOR_EDG 0
#define XIEITE_CPLR_PATCH_EDG 0
#define XIEITE_CPLR_TYPE_EKOPATH 0
#define XIEITE_CPLR_MAJOR_EKOPATH 0
#define XIEITE_CPLR_MINOR_EKOPATH 0
#define XIEITE_CPLR_PATCH_EKOPATH 0
#define XIEITE_CPLR_TYPE_ELLCC 0
#define XIEITE_CPLR_MAJOR_ELLCC 0
#define XIEITE_CPLR_MINOR_ELLCC 0
#define XIEITE_CPLR_PATCH_ELLCC 0
#define XIEITE_CPLR_TYPE_EMSCRIPTEN 0
#define XIEITE_CPLR_MAJOR_EMSCRIPTEN 0
#define XIEITE_CPLR_MINOR_EMSCRIPTEN 0
#define XIEITE_CPLR_PATCH_EMSCRIPTEN 0
#define XIEITE_CPLR_TYPE_FUJITSU_CPP 0
#define XIEITE_CPLR_MAJOR_FUJITSU_CPP 0
#define XIEITE_CPLR_MINOR_FUJITSU_CPP 0
#define XIEITE_CPLR_PATCH_FUJITSU_CPP 0
#define XIEITE_CPLR_TYPE_GCC 0
#define XIEITE_CPLR_MAJOR_GCC 0
#define XIEITE_CPLR_MINOR_GCC 0
#define XIEITE_CPLR_PATCH_GCC 0
#define XIEITE_CPLR_TYPE_GCC_XML 0
#define XIEITE_CPLR_MAJOR_GCC_XML 0
#define XIEITE_CPLR_MINOR_GCC_XML 0
#define XIEITE_CPLR_PATCH_GCC_XML 0
#define XIEITE_CPLR_TYPE_GREEN_HILLS 0
#define XIEITE_CPLR_MAJOR_GREEN_HILLS 0
#define XIEITE_CPLR_MINOR_GREEN_HILLS 0
#define XIEITE_CPLR_PATCH_GREEN_HILLS 0
#define XIEITE_CPLR_TYPE_HEXAGON 0
#define XIEITE_CPLR_MAJOR_HEXAGON 0
#define XIEITE_CPLR_MINOR_HEXAGON 0
#define XIEITE_CPLR_PATCH_HEXAGON 0
#define XIEITE_CPLR_TYPE_HIPCC 0
#define XIEITE_CPLR_MAJOR_HIPCC 0
#define XIEITE_CPLR_MINOR_HIPCC 0
#define XIEITE_CPLR_PATCH_HIPCC 0
#define XIEITE_CPLR_TYPE_HP_ACC 0
#define XIEITE_CPLR_MAJOR_HP_ACC 0
#define XIEITE_CPLR_MINOR_HP_ACC 0
#define XIEITE_CPLR_PATCH_HP_ACC 0
#define XIEITE_CPLR_TYPE_HP_ANSI_C 0
#define XIEITE_CPLR_MAJOR_HP_ANSI_C 0
#define XIEITE_CPLR_MINOR_HP_ANSI_C 0
#define XIEITE_CPLR_PATCH_HP_ANSI_C 0
#define XIEITE_CPLR_TYPE_IAR 0
#define XIEITE_CPLR_MAJOR_IAR 0
#define XIEITE_CPLR_MINOR_IAR 0
#define XIEITE_CPLR_PATCH_IAR 0
#define XIEITE_CPLR_TYPE_ICC 0
#define XIEITE_CPLR_MAJOR_ICC 0
#define XIEITE_CPLR_MINOR_ICC 0
#define XIEITE_CPLR_PATCH_ICC 0
#define XIEITE_CPLR_TYPE_ICX 0
#define XIEITE_CPLR_MAJOR_ICX 0
#define XIEITE_CPLR_MINOR_ICX 0
#define XIEITE_CPLR_PATCH_ICX 0
#define XIEITE_CPLR_TYPE_IMAGECRAFT_C 0
#define XIEITE_CPLR_MAJOR_IMAGECRAFT_C 0
#define XIEITE_CPLR_MINOR_IMAGECRAFT_C 0
#define XIEITE_CPLR_PATCH_IMAGECRAFT_C 0
#define XIEITE_CPLR_TYPE_KCC 0
#define XIEITE_CPLR_MAJOR_KCC 0
#define XIEITE_CPLR_MINOR_KCC 0
#define XIEITE_CPLR_PATCH_KCC 0
#define XIEITE_CPLR_TYPE_KEIL_C166 0
#define XIEITE_CPLR_MAJOR_KEIL_C166 0
#define XIEITE_CPLR_MINOR_KEIL_C166 0
#define XIEITE_CPLR_PATCH_KEIL_C166 0
#define XIEITE_CPLR_TYPE_KEIL_C51 0
#define XIEITE_CPLR_MAJOR_KEIL_C51 0
#define XIEITE_CPLR_MINOR_KEIL_C51 0
#define XIEITE_CPLR_PATCH_KEIL_C51 0
#define XIEITE_CPLR_TYPE_KEIL_CARM 0
#define XIEITE_CPLR_MAJOR_KEIL_CARM 0
#define XIEITE_CPLR_MINOR_KEIL_CARM 0
#define XIEITE_CPLR_PATCH_KEIL_CARM 0
#define XIEITE_CPLR_TYPE_LATTICE_C 0
#define XIEITE_CPLR_MAJOR_LATTICE_C 0
#define XIEITE_CPLR_MINOR_LATTICE_C 0
#define XIEITE_CPLR_PATCH_LATTICE_C 0
#define XIEITE_CPLR_TYPE_LCC 0
#define XIEITE_CPLR_MAJOR_LCC 0
#define XIEITE_CPLR_MINOR_LCC 0
#define XIEITE_CPLR_PATCH_LCC 0
#define XIEITE_CPLR_TYPE_LIGHTSPEED_C 0
#define XIEITE_CPLR_MAJOR_LIGHTSPEED_C 0
#define XIEITE_CPLR_MINOR_LIGHTSPEED_C 0
#define XIEITE_CPLR_PATCH_LIGHTSPEED_C 0
#define XIEITE_CPLR_TYPE_LLVM 0
#define XIEITE_CPLR_MAJOR_LLVM 0
#define XIEITE_CPLR_MINOR_LLVM 0
#define XIEITE_CPLR_PATCH_LLVM 0
#define XIEITE_CPLR_TYPE_METAWARE_HIGH 0
#define XIEITE_CPLR_MAJOR_METAWARE_HIGH 0
#define XIEITE_CPLR_MINOR_METAWARE_HIGH 0
#define XIEITE_CPLR_PATCH_METAWARE_HIGH 0
#define XIEITE_CPLR_TYPE_METROWERKS_CODEWARRIOR 0
#define XIEITE_CPLR_MAJOR_METROWERKS_CODEWARRIOR 0
#define XIEITE_CPLR_MINOR_METROWERKS_CODEWARRIOR 0
#define XIEITE_CPLR_PATCH_METROWERKS_CODEWARRIOR 0
#define XIEITE_CPLR_TYPE_MICROTEC 0
#define XIEITE_CPLR_MAJOR_MICROTEC 0
#define XIEITE_CPLR_MINOR_MICROTEC 0
#define XIEITE_CPLR_PATCH_MICROTEC 0
#define XIEITE_CPLR_TYPE_MICROWAY_NDP_C 0
#define XIEITE_CPLR_MAJOR_MICROWAY_NDP_C 0
#define XIEITE_CPLR_MINOR_MICROWAY_NDP_C 0
#define XIEITE_CPLR_PATCH_MICROWAY_NDP_C 0
#define XIEITE_CPLR_TYPE_MINGW32 0
#define XIEITE_CPLR_MAJOR_MINGW32 0
#define XIEITE_CPLR_MINOR_MINGW32 0
#define XIEITE_CPLR_PATCH_MINGW32 0
#define XIEITE_CPLR_TYPE_MINGW_W64 0
#define XIEITE_CPLR_MAJOR_MINGW_W64 0
#define XIEITE_CPLR_MINOR_MINGW_W64 0
#define XIEITE_CPLR_PATCH_MINGW_W64 0
#define XIEITE_CPLR_TYPE_MIPSPRO 0
#define XIEITE_CPLR_MAJOR_MIPSPRO 0
#define XIEITE_CPLR_MINOR_MIPSPRO 0
#define XIEITE_CPLR_PATCH_MIPSPRO 0
#define XIEITE_CPLR_TYPE_MIRACLE_C 0
#define XIEITE_CPLR_MAJOR_MIRACLE_C 0
#define XIEITE_CPLR_MINOR_MIRACLE_C 0
#define XIEITE_CPLR_PATCH_MIRACLE_C 0
#define XIEITE_CPLR_TYPE_MPW 0
#define XIEITE_CPLR_MAJOR_MPW 0
#define XIEITE_CPLR_MINOR_MPW 0
#define XIEITE_CPLR_PATCH_MPW 0
#define XIEITE_CPLR_TYPE_MSVC 0
#define XIEITE_CPLR_MAJOR_MSVC 0
#define XIEITE_CPLR_MINOR_MSVC 0
#define XIEITE_CPLR_PATCH_MSVC 0
#define XIEITE_CPLR_TYPE_NORCROFT_C 0
#define XIEITE_CPLR_MAJOR_NORCROFT_C 0
#define XIEITE_CPLR_MINOR_NORCROFT_C 0
#define XIEITE_CPLR_PATCH_NORCROFT_C 0
#define XIEITE_CPLR_TYPE_NVIDIA_HPC 0
#define XIEITE_CPLR_MAJOR_NVIDIA_HPC 0
#define XIEITE_CPLR_MINOR_NVIDIA_HPC 0
#define XIEITE_CPLR_PATCH_NVIDIA_HPC 0
#define XIEITE_CPLR_TYPE_NVCC 0
#define XIEITE_CPLR_MAJOR_NVCC 0
#define XIEITE_CPLR_MINOR_NVCC 0
#define XIEITE_CPLR_PATCH_NVCC 0
#define XIEITE_CPLR_TYPE_NWCC 0
#define XIEITE_CPLR_MAJOR_NWCC 0
#define XIEITE_CPLR_MINOR_NWCC 0
#define XIEITE_CPLR_PATCH_NWCC 0
#define XIEITE_CPLR_TYPE_OPEN64 0
#define XIEITE_CPLR_MAJOR_OPEN64 0
#define XIEITE_CPLR_MINOR_OPEN64 0
#define XIEITE_CPLR_PATCH_OPEN64 0
#define XIEITE_CPLR_TYPE_OPENACC 0
#define XIEITE_CPLR_MAJOR_OPENACC 0
#define XIEITE_CPLR_MINOR_OPENACC 0
#define XIEITE_CPLR_PATCH_OPENACC 0
#define XIEITE_CPLR_TYPE_OPENSERVER 0
#define XIEITE_CPLR_MAJOR_OPENSERVER 0
#define XIEITE_CPLR_MINOR_OPENSERVER 0
#define XIEITE_CPLR_PATCH_OPENSERVER 0
#define XIEITE_CPLR_TYPE_PACIFIC_C 0
#define XIEITE_CPLR_MAJOR_PACIFIC_C 0
#define XIEITE_CPLR_MINOR_PACIFIC_C 0
#define XIEITE_CPLR_PATCH_PACIFIC_C 0
#define XIEITE_CPLR_TYPE_PALM 0
#define XIEITE_CPLR_MAJOR_PALM 0
#define XIEITE_CPLR_MINOR_PALM 0
#define XIEITE_CPLR_PATCH_PALM 0
#define XIEITE_CPLR_TYPE_PELLES_C 0
#define XIEITE_CPLR_MAJOR_PELLES_C 0
#define XIEITE_CPLR_MINOR_PELLES_C 0
#define XIEITE_CPLR_PATCH_PELLES_C 0
#define XIEITE_CPLR_TYPE_PGI 0
#define XIEITE_CPLR_MAJOR_PGI 0
#define XIEITE_CPLR_MINOR_PGI 0
#define XIEITE_CPLR_PATCH_PGI 0
#define XIEITE_CPLR_TYPE_PRO_C 0
#define XIEITE_CPLR_MAJOR_PRO_C 0
#define XIEITE_CPLR_MINOR_PRO_C 0
#define XIEITE_CPLR_PATCH_PRO_C 0
#define XIEITE_CPLR_TYPE_RENESAS 0
#define XIEITE_CPLR_MAJOR_RENESAS 0
#define XIEITE_CPLR_MINOR_RENESAS 0
#define XIEITE_CPLR_PATCH_RENESAS 0
#define XIEITE_CPLR_TYPE_SDCC 0
#define XIEITE_CPLR_MAJOR_SDCC 0
#define XIEITE_CPLR_MINOR_SDCC 0
#define XIEITE_CPLR_PATCH_SDCC 0
#define XIEITE_CPLR_TYPE_SNC 0
#define XIEITE_CPLR_MAJOR_SNC 0
#define XIEITE_CPLR_MINOR_SNC 0
#define XIEITE_CPLR_PATCH_SNC 0
#define XIEITE_CPLR_TYPE_STRATUS_VOS_C 0
#define XIEITE_CPLR_MAJOR_STRATUS_VOS_C 0
#define XIEITE_CPLR_MINOR_STRATUS_VOS_C 0
#define XIEITE_CPLR_PATCH_STRATUS_VOS_C 0
#define XIEITE_CPLR_TYPE_SUNPRO_C 0
#define XIEITE_CPLR_MAJOR_SUNPRO_C 0
#define XIEITE_CPLR_MINOR_SUNPRO_C 0
#define XIEITE_CPLR_PATCH_SUNPRO_C 0
#define XIEITE_CPLR_TYPE_SUNPRO_CPP 0
#define XIEITE_CPLR_MAJOR_SUNPRO_CPP 0
#define XIEITE_CPLR_MINOR_SUNPRO_CPP 0
#define XIEITE_CPLR_PATCH_SUNPRO_CPP 0
#define XIEITE_CPLR_TYPE_SYMANTEC_CPP 0
#define XIEITE_CPLR_MAJOR_SYMANTEC_CPP 0
#define XIEITE_CPLR_MINOR_SYMANTEC_CPP 0
#define XIEITE_CPLR_PATCH_SYMANTEC_CPP 0
#define XIEITE_CPLR_TYPE_TCC 0
#define XIEITE_CPLR_MAJOR_TCC 0
#define XIEITE_CPLR_MINOR_TCC 0
#define XIEITE_CPLR_PATCH_TCC 0
#define XIEITE_CPLR_TYPE_TENDRA 0
#define XIEITE_CPLR_MAJOR_TENDRA 0
#define XIEITE_CPLR_MINOR_TENDRA 0
#define XIEITE_CPLR_PATCH_TENDRA 0
#define XIEITE_CPLR_TYPE_TI_CGT 0
#define XIEITE_CPLR_MAJOR_TI_CGT 0
#define XIEITE_CPLR_MINOR_TI_CGT 0
#define XIEITE_CPLR_PATCH_TI_CGT 0
#define XIEITE_CPLR_TYPE_TI_CL430 0
#define XIEITE_CPLR_MAJOR_TI_CL430 0
#define XIEITE_CPLR_MINOR_TI_CL430 0
#define XIEITE_CPLR_PATCH_TI_CL430 0
#define XIEITE_CPLR_TYPE_TURBO 0
#define XIEITE_CPLR_MAJOR_TURBO 0
#define XIEITE_CPLR_MINOR_TURBO 0
#define XIEITE_CPLR_PATCH_TURBO 0
#define XIEITE_CPLR_TYPE_ULTIMATE 0
#define XIEITE_CPLR_MAJOR_ULTIMATE 0
#define XIEITE_CPLR_MINOR_ULTIMATE 0
#define XIEITE_CPLR_PATCH_ULTIMATE 0
#define XIEITE_CPLR_TYPE_USL_C 0
#define XIEITE_CPLR_MAJOR_USL_C 0
#define XIEITE_CPLR_MINOR_USL_C 0
#define XIEITE_CPLR_PATCH_USL_C 0
#define XIEITE_CPLR_TYPE_VBCC 0
#define XIEITE_CPLR_MAJOR_VBCC 0
#define XIEITE_CPLR_MINOR_VBCC 0
#define XIEITE_CPLR_PATCH_VBCC 0
#define XIEITE_CPLR_TYPE_WATCOM 0
#define XIEITE_CPLR_MAJOR_WATCOM 0
#define XIEITE_CPLR_MINOR_WATCOM 0
#define XIEITE_CPLR_PATCH_WATCOM 0
#define XIEITE_CPLR_TYPE_WIND_RIVER_DIAB 0
#define XIEITE_CPLR_MAJOR_WIND_RIVER_DIAB 0
#define XIEITE_CPLR_MINOR_WIND_RIVER_DIAB 0
#define XIEITE_CPLR_PATCH_WIND_RIVER_DIAB 0
#define XIEITE_CPLR_TYPE_XC8 0
#define XIEITE_CPLR_MAJOR_XC8 0
#define XIEITE_CPLR_MINOR_XC8 0
#define XIEITE_CPLR_PATCH_XC8 0
#define XIEITE_CPLR_TYPE_XC16 0
#define XIEITE_CPLR_MAJOR_XC16 0
#define XIEITE_CPLR_MINOR_XC16 0
#define XIEITE_CPLR_PATCH_XC16 0
#define XIEITE_CPLR_TYPE_XC32 0
#define XIEITE_CPLR_MAJOR_XC32 0
#define XIEITE_CPLR_MINOR_XC32 0
#define XIEITE_CPLR_PATCH_XC32 0
#define XIEITE_CPLR_TYPE_XC_DSC 0
#define XIEITE_CPLR_MAJOR_XC_DSC 0
#define XIEITE_CPLR_MINOR_XC_DSC 0
#define XIEITE_CPLR_PATCH_XC_DSC 0
#define XIEITE_CPLR_TYPE_XL 0
#define XIEITE_CPLR_MAJOR_XL 0
#define XIEITE_CPLR_MINOR_XL 0
#define XIEITE_CPLR_PATCH_XL 0
#define XIEITE_CPLR_TYPE_ZORTECH_CPP 0
#define XIEITE_CPLR_MAJOR_ZORTECH_CPP 0
#define XIEITE_CPLR_MINOR_ZORTECH_CPP 0
#define XIEITE_CPLR_PATCH_ZORTECH_CPP 0
#define XIEITE_CPLR_TYPE_Z88DK 0
#define XIEITE_CPLR_MAJOR_Z88DK 0
#define XIEITE_CPLR_MINOR_Z88DK 0
#define XIEITE_CPLR_PATCH_Z88DK 0

#define XIEITE_CPLR_EQ(type, major, ...) XIEITE_DETAIL_CPLR_SEL(__VA_ARGS__, XIEITE_DETAIL_CPLR_EQ(type, major, __VA_ARGS__), XIEITE_DETAIL_CPLR_EQ(type, major, __VA_ARGS__, 0), XIEITE_DETAIL_CPLR_EQ(type, major, 0, 0))
#define XIEITE_CPLR_LEAST(type, major, ...) XIEITE_DETAIL_CPLR_SEL(__VA_ARGS__, XIEITE_DETAIL_CPLR_LEAST(type, major, __VA_ARGS__), XIEITE_DETAIL_CPLR_LEAST(type, major, __VA_ARGS__, 0), XIEITE_DETAIL_CPLR_LEAST(type, major, 0, 0))
#define XIEITE_CPLR_MOST(type, major, ...) XIEITE_DETAIL_CPLR_SEL(__VA_ARGS__, XIEITE_DETAIL_CPLR_MOST(type, major, __VA_ARGS__), XIEITE_DETAIL_CPLR_MOST(type, major, __VA_ARGS__, 0), XIEITE_DETAIL_CPLR_MOST(type, major, 0, 0))
#define XIEITE_DETAIL_CPLR_SEL(_0, _1, _2, x, ...) x
#define XIEITE_DETAIL_CPLR_EQ(type, major, minor, patch) (XIEITE_CPLR_TYPE_##type && (XIEITE_CPLR_MAJOR_##type == (major)) && (XIEITE_CPLR_MINOR_##type == (minor)) && (XIEITE_CPLR_PATCH_##type == (patch)))
#define XIEITE_DETAIL_CPLR_LEAST(type, major, minor, patch) (XIEITE_CPLR_TYPE_##type && ((XIEITE_CPLR_MAJOR_##type > (major)) || (XIEITE_CPLR_MAJOR_##type == (major)) && ((XIEITE_CPLR_MINOR_##type > (minor)) || (XIEITE_CPLR_MINOR_##type == (minor)) && (XIEITE_CPLR_PATCH_##type >= (patch)))))
#define XIEITE_DETAIL_CPLR_MOST(type, major, minor, patch) (XIEITE_CPLR_TYPE_##type && ((XIEITE_CPLR_MAJOR_##type < (major)) || (XIEITE_CPLR_MAJOR_##type == (major)) && ((XIEITE_CPLR_MINOR_##type < (minor)) || (XIEITE_CPLR_MINOR_##type == (minor)) && (XIEITE_CPLR_PATCH_##type <= (patch)))))

#ifdef _ACC_
#	undef XIEITE_CPLR_TYPE_ACC
#	define XIEITE_CPLR_TYPE_ACC 1

#	undef XIEITE_CPLR_MAJOR_ACC
#	define XIEITE_CPLR_MAJOR_ACC (__HP_aCC / 10000)

#	undef XIEITE_CPLR_MINOR_ACC
#	define XIEITE_CPLR_MINOR_ACC (__HP_aCC % 10000 / 100)

#	undef XIEITE_CPLR_PATCH_ACC
#	define XIEITE_CPLR_PATCH_ACC (__HP_aCC % 100)
#endif

#ifdef __ACK__
#	undef XIEITE_CPLR_TYPE_ACK
#	define XIEITE_CPLR_TYPE_ACK 1
#endif

#ifdef __CHC__
#	undef XIEITE_CPLR_TYPE_ALTIUM_C_TO_HARDWARE
#	define XIEITE_CPLR_TYPE_ALTIUM_C_TO_HARDWARE 1

#	undef XIEITE_CPLR_MAJOR_ALTIUM_C_TO_HARDWARE
#	define XIEITE_CPLR_MAJOR_ALTIUM_C_TO_HARDWARE (__VERSION___ / 1000)

#	undef XIEITE_CPLR_MINOR_ALTIUM_C_TO_HARDWARE
#	define XIEITE_CPLR_MINOR_ALTIUM_C_TO_HARDWARE (__VERSION___ % 1000)

#	undef XIEITE_CPLR_PATCH_ALTIUM_C_TO_HARDWARE
#	define XIEITE_CPLR_PATCH_ALTIUM_C_TO_HARDWARE __REVISION__
#endif

#ifdef __CMB__
#	undef XIEITE_CPLR_TYPE_ALTIUM_MICROBLAZE_C
#	define XIEITE_CPLR_TYPE_ALTIUM_MICROBLAZE_C 1

#	undef XIEITE_CPLR_MAJOR_ALTIUM_MICROBLAZE_C
#	define XIEITE_CPLR_MAJOR_ALTIUM_MICROBLAZE_C (__VERSION___ / 1000)

#	undef XIEITE_CPLR_MINOR_ALTIUM_MICROBLAZE_C
#	define XIEITE_CPLR_MINOR_ALTIUM_MICROBLAZE_C (__VERSION___ % 1000)

#	undef XIEITE_CPLR_PATCH_ALTIUM_MICROBLAZE_C
#	define XIEITE_CPLR_PATCH_ALTIUM_MICROBLAZE_C __REVISION__
#endif

#ifdef __aocc__
#	undef XIEITE_CPLR_TYPE_AOCC
#	define XIEITE_CPLR_TYPE_AOCC 1

#	ifdef __aocc_major__
#		undef XIETIE_CPLR_MAJOR_AOCC
#		define XIETIE_CPLR_MAJOR_AOCC __aocc_major__

#		undef XIETIE_CPLR_MAJOR_AOCC
#		define XIETIE_CPLR_MAJOR_AOCC __aocc_minor__

#		undef XIETIE_CPLR_MAJOR_AOCC
#		define XIETIE_CPLR_MAJOR_AOCC __aocc_patchlevel__
#	endif
#endif

#ifdef __CC_ARM
#	undef XIEITE_CPLR_TYPE_ARMCC
#	define XIEITE_CPLR_TYPE_ARMCC 1

#	undef XIEITE_CPLR_MAJOR_ARMCC
#	define XIEITE_CPLR_MAJOR_ARMCC (__ARMCC_VERSION / 100000)

#	undef XIEITE_CPLR_MINOR_ARMCC
#	define XIEITE_CPLR_MINOR_ARMCC (__ARMCC_VERSION % 100000 / 10000)

#	undef XIEITE_CPLR_PATCH_ARMCC
#	define XIEITE_CPLR_PATCH_ARMCC (__ARMCC_VERSION % 10000 / 1000)
#endif

#ifdef AZTEC_C
#	undef XIEITE_CPLR_TYPE_AZTEC_C
#	define XIEITE_CPLR_TYPE_AZTEC_C 1

#	undef XIEITE_CPLR_MAJOR_AZTEC_C
#	define XIEITE_CPLR_MAJOR_AZTEC_C (__VERSION / 100)

#	undef XIEITE_CPLR_MINOR_AZTEC_C
#	define XIEITE_CPLR_MINOR_AZTEC_C (__VERSION % 100)
#endif

#if defined(__BORLANDC__) || defined(__CODEGEARC__)
#	undef XIEITE_CPLR_TYPE_BORLAND
#	define XIEITE_CPLR_TYPE_BORLAND 1
#endif

#ifdef __CC65__
#	undef XIEITE_CPLR_TYPE_CC65
#	define XIEITE_CPLR_TYPE_CC65 1

#	undef XIEITE_CPLR_MAJOR_CC65
#	define XIEITE_CPLR_MAJOR_CC65 (__CC65__ / 0x100)

#	undef XIEITE_CPLR_MINOR_CC65
#	define XIEITE_CPLR_MINOR_CC65 (__CC65__ % 0x100 / 0x10)

#	undef XIEITE_CPLR_PATCH_CC65
#	define XIEITE_CPLR_PATCH_CC65 (__CC65__ % 0x10)
#endif

#if defined(__circle__) || defined(__circle_lang__) || defined(__circle_build__)
#	undef XIEITE_CPLR_TYPE_CIRCLE
#	define XIEITE_CPLR_TYPE_CIRCLE 1

#	undef XIEITE_CPLR_MAJOR_CIRCLE
#	define XIEITE_CPLR_MAJOR_CIRCLE (__circle__ / 10000)

#	undef XIEITE_CPLR_MINOR_CIRCLE
#	define XIEITE_CPLR_MINOR_CIRCLE (__circle__ % 10000 / 100)

#	undef XIEITE_CPLR_PATCH_CIRCLE
#	define XIEITE_CPLR_PATCH_CIRCLE (__circle__ % 100)
#endif

#ifdef __clang__
#	undef XIEITE_CPLR_TYPE_CLANG
#	define XIEITE_CPLR_TYPE_CLANG 1

#	undef XIEITE_CPLR_MAJOR_CLANG
#	define XIEITE_CPLR_MAJOR_CLANG __clang_major___

#	undef XIEITE_CPLR_MINOR_CLANG
#	define XIEITE_CPLR_MINOR_CLANG __clang_minor___

#	undef XIEITE_CPLR_PATCH_CLANG
#	define XIEITE_CPLR_PATCH_CLANG __clang_patchlevel__
#endif

#if defined(__CWCC__) || defined(__MWERKS__)
#	undef XIEITE_CPLR_TYPE_METROWERKS_CODEWARRIOR
#	define XIEITE_CPLR_TYPE_METROWERKS_CODEWARRIOR 1

#	undef XIEITE_CPLR_MAJOR_METROWERKS_CODEWARRIOR
#	undef XIEITE_CPLR_MINOR_METROWERKS_CODEWARRIOR
#	undef XIEITE_CPLR_PATCH_METROWERKS_CODEWARRIOR
#	ifdef __CWCC__
#		define XIEITE_CPLR_MAJOR_METROWERKS_CODEWARRIOR (__CWCC__ / 0x1000)
#		define XIEITE_CPLR_MINOR_METROWERKS_CODEWARRIOR (__CWCC__ % 0x1000 / 0x100)
#		define XIEITE_CPLR_PATCH_METROWERKS_CODEWARRIOR (__CWCC__ % 0x100)
#	else
#		define XIEITE_CPLR_MAJOR_METROWERKS_CODEWARRIOR (__MWERKS__ / 0x1000)
#		define XIEITE_CPLR_MINOR_METROWERKS_CODEWARRIOR (__MWERKS__ % 0x1000 / 0x100)
#		define XIEITE_CPLR_PATCH_METROWERKS_CODEWARRIOR (__MWERKS__ % 0x100)
#	endif
#endif

#ifdef __COMO__
#	undef XIEITE_CPLR_TYPE_COMEAU
#	define XIEITE_CPLR_TYPE_COMEAU 1

#	undef XIEITE_CPLR_MAJOR_COMEAU
#	define XIEITE_CPLR_MAJOR_COMEAU (__COMO_VERSION___ / 0x100)

#	undef XIEITE_CPLR_MINOR_COMEAU
#	define XIEITE_CPLR_MINOR_COMEAU (__COMO_VERSION___ % 0x100 / 0x10)

#	undef XIEITE_CPLR_PATCH_COMEAU
#	define XIEITE_CPLR_PATCH_COMEAU (__COMO_VERSION__ % 0x10)
#endif

#ifdef __DECC
#	undef XIEITE_CPLR_TYPE_COMPAQ_C
#	define XIEITE_CPLR_TYPE_COMPAQ_C 1

#	undef XIEITE_CPLR_MAJOR_COMPAQ_C
#	define XIEITE_CPLR_MAJOR_COMPAQ_C (__DECC_VER / 10000000)

#	undef XIEITE_CPLR_MINOR_COMPAQ_C
#	define XIEITE_CPLR_MINOR_COMPAQ_C (__DECC_VER % 10000000 / 100000)

#	undef XIEITE_CPLR_PATCH_COMPAQ_C
#	define XIEITE_CPLR_PATCH_COMPAQ_C (__DECC_VER % 10000)
#endif

#ifdef __DECCXX
#	undef XIEITE_CPLR_TYPE_COMPAQ_CPP
#	define XIEITE_CPLR_TYPE_COMPAQ_CPP 1

#	undef XIEITE_CPLR_MAJOR_COMPAQ_CPP
#	define XIEITE_CPLR_MAJOR_COMPAQ_CPP (__DECCXX_VER / 10000000)

#	undef XIEITE_CPLR_MINOR_COMPAQ_CPP
#	define XIEITE_CPLR_MINOR_COMPAQ_CPP (__DECCXX_VER % 10000000 / 100000)

#	undef XIEITE_CPLR_PATCH_COMPAQ_CPP
#	define XIEITE_CPLR_PATCH_COMPAQ_CPP (__DECCXX_VER % 10000)
#endif

#ifdef __COMPCERT__
#	undef XIEITE_CPLR_TYPE_COMPCERT
#	define XIEITE_CPLR_TYPE_COMPCERT 1
#endif

#ifdef __convexc__
#	undef XIEITE_CPLR_TYPE_CONVEX_C
#	define XIEITE_CPLR_TYPE_CONVEX_C 1
#endif

#ifdef __COVERITY__
#	undef XIEITE_CPLR_TYPE_COVERITY_STATIC_ANALYZER
#	define XIEITE_CPLR_TYPE_COVERITY_STATIC_ANALYZER 1
#endif

#ifdef _CRAYC
#	undef XIEITE_CPLR_TYPE_CRAY
#	define XIEITE_CPLR_TYPE_CRAY 1

#	undef XIEITE_CPLR_MAJOR_CRAY
#	define XIEITE_CPLR_MAJOR_CRAY _RELEASE

#	undef XIEITE_CPLR_MINOR_CRAY
#	define XIEITE_CPLR_MINOR_CRAY _RELEASE_MINOR
#endif

#ifdef __DMC__
#	undef XIEITE_CPLR_TYPE_DIGITAL_MARS
#	define XIEITE_CPLR_TYPE_DIGITAL_MARS 1

#	undef XIEITE_CPLR_MAJOR_DIGITAL_MARS
#	define XIEITE_CPLR_MAJOR_DIGITAL_MARS (__DMC__ / 0x100)

#	undef XIEITE_CPLR_MINOR_DIGITAL_MARS
#	define XIEITE_CPLR_MINOR_DIGITAL_MARS (__DMC__ % 0x100 / 0x10)

#	undef XIEITE_CPLR_PATCH_DIGITAL_MARS
#	define XIEITE_CPLR_PATCH_DIGITAL_MARS (__DMC__ % 0x10)
#endif

#ifdef _DICE
#	undef XIEITE_CPLR_TYPE_DICE_C
#	define XIEITE_CPLR_TYPE_DICE_C 1
#endif

#ifdef __SYSC__
#	undef XIEITE_CPLR_TYPE_DIGNUS_SYSTEMS_CPP
#	define XIEITE_CPLR_TYPE_DIGNUS_SYSTEMS_CPP 1

#	undef XIEITE_CPLR_MAJOR_DIGNUS_SYSTEMS_CPP
#	define XIEITE_CPLR_MAJOR_DIGNUS_SYSTEMS_CPP (__SYSC_VER__ / 10000)

#	undef XIEITE_CPLR_MINOR_DIGNUS_SYSTEMS_CPP
#	define XIEITE_CPLR_MINOR_DIGNUS_SYSTEMS_CPP (__SYSC_VER__ % 10000 / 100)

#	undef XIEITE_CPLR_PATCH_DIGNUS_SYSTEMS_CPP
#	define XIEITE_CPLR_PATCH_DIGNUS_SYSTEMS_CPP (__SYSC_VER__ % 100)
#endif

#if defined(DJGPP) || defined(__DJGPP) || defined(__DJGPP__)
#	undef XIEITE_CPLR_TYPE_DJGPP
#	define XIEITE_CPLR_TYPE_DJGPP 1

#	undef XIEITE_CPLR_MAJOR_DJGPP
#	define XIEITE_CPLR_MAJOR_DJGPP __DJGPP__

#	undef XIEITE_CPLR_MINOR_DJGPP
#	define XIEITE_CPLR_MINOR_DJGPP __DJGPP_MINOR__
#endif

#ifdef __EDG__
#	undef XIEITE_CPLR_TYPE_EDG
#	define XIEITE_CPLR_TYPE_EDG 1

#	undef XIEITE_CPLR_MAJOR_EDG
#	define XIEITE_CPLR_MAJOR_EDG (__EDG_VERSION___ / 100)

#	undef XIEITE_CPLR_MINOR_EDG
#	define XIEITE_CPLR_MINOR_EDG (__EDG_VERSION___ % 100)
#endif

#ifdef __PATHCC__
#	undef XIEITE_CPLR_TYPE_EKOPATH
#	define XIEITE_CPLR_TYPE_EKOPATH 1

#	undef XIEITE_CPLR_MAJOR_EKOPATH
#	define XIEITE_CPLR_MAJOR_EKOPATH __PATHCC__

#	undef XIEITE_CPLR_MINOR_EKOPATH
#	define XIEITE_CPLR_MINOR_EKOPATH __PATHCC_MINOR__

#	undef XIEITE_CPLR_PATCH_EKOPATH
#	define XIEITE_CPLR_PATCH_EKOPATH __PATHCC_PATCHLEVEL__
#endif

#ifdef __ELLCC__
#	undef XIEITE_CPLR_TYPE_ELLCC
#	define XIEITE_CPLR_TYPE_ELLCC 1
#endif

#ifdef __EMSCRIPTEN__
#	undef XIEITE_CPLR_TYPE_EMSCRIPTEN
#	define XIEITE_CPLR_TYPE_EMSCRIPTEN 1
#endif

#ifdef __FCC_VERSION
#	undef XIEITE_CPLR_TYPE_FUJITSU_CPP
#	define XIEITE_CPLR_TYPE_FUJITSU_CPP 1
#endif

#if defined(__GNUC) || defined(__GNUC__) || defined(__gnuc)
#	undef XIEITE_CPLR_TYPE_GCC
#	define XIEITE_CPLR_TYPE_GCC 1

#	undef XIEITE_CPLR_MAJOR_GCC
#	define XIEITE_CPLR_MAJOR_GCC __GNUC__

#	undef XIEITE_CPLR_MINOR_GCC
#	define XIEITE_CPLR_MINOR_GCC __GNUC_MINOR__

#	undef XIEITE_CPLR_PATCH_GCC
#	define XIEITE_CPLR_PATCH_GCC __GNUC_PATCHLEVEL__
#endif

#ifdef __GCCXML__
#	undef XIEITE_CPLR_TYPE_GCC_XML
#	define XIEITE_CPLR_TYPE_GCC_XML 1
#endif

#if defined(__ghs) || defined(__ghs__)
#	undef XIEITE_CPLR_TYPE_GREEN_HILLS
#	define XIEITE_CPLR_TYPE_GREEN_HILLS 1

#	ifdef __ghs
#		undef XIEITE_CPLR_MAJOR_GREEN_HILLS
#		define XIEITE_CPLR_MAJOR_GREEN_HILLS (__ghs / 100)

#		undef XIEITE_CPLR_MINOR_GREEN_HILLS
#		define XIEITE_CPLR_MINOR_GREEN_HILLS (__ghs % 100 / 10)

#		undef XIEITE_CPLR_PATCH_GREEN_HILLS
#		define XIEITE_CPLR_PATCH_GREEN_HILLS (__ghs % 10)
#	elifdef __GHS_VERSION_NUMBER__
#		undef XIEITE_CPLR_MAJOR_GREEN_HILLS
#		define XIEITE_CPLR_MAJOR_GREEN_HILLS (__GHS_VERSION_NUMBER__ / 100)

#		undef XIEITE_CPLR_MINOR_GREEN_HILLS
#		define XIEITE_CPLR_MINOR_GREEN_HILLS (__GHS_VERSION_NUMBER__ % 100 / 10)

#		undef XIEITE_CPLR_PATCH_GREEN_HILLS
#		define XIEITE_CPLR_PATCH_GREEN_HILLS (__GHS_VERSION_NUMBER__ % 10)
#	endif
#endif

#ifdef __hexagon__
#	undef XIEITE_CPLR_TYPE_HEXAGON
#	define XIEITE_CPLR_TYPE_HEXAGON 1

#	ifdef __HEXAGON_V65__
#		undef XIEITE_CPLR_MAJOR_HEXAGON
#		define XIEITE_CPLR_MAJOR_HEXAGON 65
#	endif

#	ifdef __HEXAGON_V66__
#		undef XIEITE_CPLR_MAJOR_HEXAGON
#		define XIEITE_CPLR_MAJOR_HEXAGON 66
#	endif

#	ifdef __HEXAGON_V67__
#		undef XIEITE_CPLR_MAJOR_HEXAGON
#		define XIEITE_CPLR_MAJOR_HEXAGON 67
#	endif

#	ifdef __HEXAGON_V68__
#		undef XIEITE_CPLR_MAJOR_HEXAGON
#		define XIEITE_CPLR_MAJOR_HEXAGON 68
#	endif

#	ifdef __HEXAGON_V69__
#		undef XIEITE_CPLR_MAJOR_HEXAGON
#		define XIEITE_CPLR_MAJOR_HEXAGON 69
#	endif

#	ifdef __HEXAGON_V70__
#		undef XIEITE_CPLR_MAJOR_HEXAGON
#		define XIEITE_CPLR_MAJOR_HEXAGON 70
#	endif

#	ifdef __HEXAGON_V71__
#		undef XIEITE_CPLR_MAJOR_HEXAGON
#		define XIEITE_CPLR_MAJOR_HEXAGON 71
#	endif

#	ifdef __HEXAGON_V73__
#		undef XIEITE_CPLR_MAJOR_HEXAGON
#		define XIEITE_CPLR_MAJOR_HEXAGON 73
#	endif
#endif

#if defined(__HIPCC__) || defined(__HIP__)
#	undef XIEITE_CPLR_TYPE_HIPCC
#	define XIEITE_CPLR_TYPE_HIPCC 1
#endif

#ifdef __HP_aCC
#	undef XIEITE_CPLR_TYPE_HP_ACC
#	define XIEITE_CPLR_TYPE_HP_ACC 1

#	undef XIEITE_CPLR_MAJOR_HP_ACC
#	define XIEITE_CPLR_MAJOR_HP_ACC (__HP_aCC / 10000)

#	undef XIEITE_CPLR_MINOR_HP_ACC
#	define XIEITE_CPLR_MINOR_HP_ACC (__HP_aCC % 10000 / 100)

#	undef XIEITE_CPLR_PATCH_HP_ACC
#	define XIEITE_CPLR_PATCH_HP_ACC (__HP_aCC % 100)
#endif

#ifdef __HP_cc
#	undef XIEITE_CPLR_TYPE_HP_ANSI_C
#	define XIEITE_CPLR_TYPE_HP_ANSI_C 1
#endif

#ifdef __IAR_SYSTEMS_ICC__
#	undef XIEITE_CPLR_TYPE_IAR
#	define XIEITE_CPLR_TYPE_IAR 1

#	undef XIEITE_CPLR_MAJOR_IAR
#	define XIEITE_CPLR_MAJOR_IAR (__VER__ / 100)

#	undef XIEITE_CPLR_MINOR_IAR
#	define XIEITE_CPLR_MINOR_IAR (__VER__ % 100)
#endif

#if defined(__ECC) || defined(__ICC) || defined(__ICL) || defined(__INTEL_COMPILER)
#	undef XIEITE_CPLR_TYPE_ICC
#	define XIEITE_CPLR_TYPE_ICC 1

#	ifdef __INTEL_COMPILER
#		undef XIEITE_CPLR_MAJOR_ICC
#		undef XIEITE_CPLR_MINOR_ICC
#		undef XIEITE_CPLR_PATCH_ICC

#		if __INTEL_COMPILER == 9999
#			define XIEITE_CPLR_MAJOR_ICC 12
#			define XIEITE_CPLR_MINOR_ICC 1
#		else
#			define XIEITE_CPLR_MAJOR_ICC (__INTEL_COMPILER / 100)
#			define XIEITE_CPLR_MINOR_ICC (__INTEL_COMPILER % 100 / 10)

#			ifdef __INTEL_COMPILER_UPDATE
#				define XIEITE_CPLR_PATCH_ICC __INTEL_COMPILER_UPDATE
#			else
#				define XIEITE_CPLR_PATCH_ICC (__INTEL_COMPILER % 10)
#			endif
#		endif
#	endif
#endif

#ifdef __INTEL_CLANG_COMPILER
#	undef XIEITE_CPLR_TYPE_ICX
#	define XIEITE_CPLR_TYPE_ICX 1

#	undef XIEITE_CPLR_MAJOR_ICX
#	define XIEITE_CPLR_MAJOR_ICX (__INTEL_CLANG_COMPILER / 100)

#	undef XIEITE_CPLR_MINOR_ICX
#	define XIEITE_CPLR_MINOR_ICX (__INTEL_CLANG_COMPILER % 100 / 10)

#	undef XIEITE_CPLR_PATCH_ICX
#	define XIEITE_CPLR_PATCH_ICX (__INTEL_CLANG_COMPILER % 10)
#endif

#ifdef __IMAGECRAFT__
#	undef XIEITE_CPLR_TYPE_IMAGECRAFT_C
#	define XIEITE_CPLR_TYPE_IMAGECRAFT_C 1
#endif

#ifdef __KCC
#	undef XIEITE_CPLR_TYPE_KCC
#	define XIEITE_CPLR_TYPE_KCC 1

#	undef XIEITE_CPLR_MAJOR_KCC
#	define XIEITE_CPLR_MAJOR_KCC (__KCC_VERSION / 0x1000)

#	undef XIEITE_CPLR_MINOR_KCC
#	define XIEITE_CPLR_MINOR_KCC (__KCC_VERSION % 0x1000 / 0x100)

#	undef XIEITE_CPLR_PATCH_KCC
#	define XIEITE_CPLR_PATCH_KCC (__KCC_VERSION % 0x100)
#endif

#ifdef __C166__
#	undef XIEITE_CPLR_TYPE_KEIL_C166
#	define XIEITE_CPLR_TYPE_KEIL_C166 1

#	undef XIEITE_CPLR_MAJOR_KEIL_C166
#	define XIEITE_CPLR_MAJOR_KEIL_C166 (__C166__ / 100)

#	undef XIEITE_CPLR_MINOR_KEIL_C166
#	define XIEITE_CPLR_MINOR_KEIL_C166 (__C166__ % 100)
#endif

#ifdef __C51__
#	undef XIEITE_CPLR_TYPE_KEIL_C51
#	define XIEITE_CPLR_TYPE_KEIL_C51 1

#	undef XIEITE_CPLR_MAJOR_KEIL_C51
#	define XIEITE_CPLR_MAJOR_KEIL_C51 (__C51__ / 100)

#	undef XIEITE_CPLR_MINOR_KEIL_C51
#	define XIEITE_CPLR_MINOR_KEIL_C51 (__C51__ % 100)
#endif

#if defined(__CA__) || defined(__KEIL__)
#	undef XIEITE_CPLR_TYPE_KEIL_CARM
#	define XIEITE_CPLR_TYPE_KEIL_CARM 1

#	undef XIEITE_CPLR_MAJOR_KEIL_CARM
#	define XIEITE_CPLR_MAJOR_KEIL_CARM (__CA__ / 100)

#	undef XIEITE_CPLR_MINOR_KEIL_CARM
#	define XIEITE_CPLR_MINOR_KEIL_CARM (__CA__ % 100)
#endif

#if defined(SASC) || defined(__SASC) || defined(__SASC__)
#	undef XIEITE_CPLR_TYPE_LATTICE_C
#	define XIEITE_CPLR_TYPE_LATTICE_C 1

#	undef XIEITE_CPLR_MAJOR_LATTICE_C
#	define XIEITE_CPLR_MAJOR_LATTICE_C (__SASC__ / 100)

#	undef XIEITE_CPLR_MINOR_LATTICE_C
#	define XIEITE_CPLR_MINOR_LATTICE_C (__SASC__ % 100)
#endif

#ifdef __LCC__
#	undef XIEITE_CPLR_TYPE_LCC
#	define XIEITE_CPLR_TYPE_LCC 1

#	undef XIEITE_CPLR_MAJOR_LCC
#	define XIEITE_CPLR_MAJOR_LCC __LCC__

#	undef XIEITE_CPLR_MINOR_LCC
#	define XIEITE_CPLR_MINOR_LCC __LCC_MINOR__
#endif

#if defined(THINKC3) || defined(THINKC4)
#	undef XIEITE_CPLR_TYPE_LIGHTSPEED_C
#	define XIEITE_CPLR_TYPE_LIGHTSPEED_C 1
#endif

#ifdef __llvm__
#	undef XIEITE_CPLR_TYPE_LLVM
#	define XIEITE_CPLR_TYPE_LLVM 1
#endif

#ifdef __HIGHC__
#	undef XIEITE_CPLR_TYPE_METAWARE_HIGH
#	define XIEITE_CPLR_TYPE_METAWARE_HIGH 1
#endif

#ifdef _MRI
#	undef XIEITE_CPLR_TYPE_MICROTEC
#	define XIEITE_CPLR_TYPE_MICROTEC 1
#endif

#if defined(__NDPC__) || defined(__NDPX__)
#	undef XIEITE_CPLR_TYPE_MICROWAY_NDP_C
#	define XIEITE_CPLR_TYPE_MICROWAY_NDP_C 1
#endif

#ifdef __MINGW32__
#	include <windows.h>

#	undef XIEITE_CPLR_TYPE_MINGW32
#	define XIEITE_CPLR_TYPE_MINGW32 1

#	undef XIEITE_CPLR_MAJOR_MINGW32
#	define XIEITE_CPLR_MAJOR_MINGW32 __MINGW32_MAJOR_VERSION

#	undef XIEITE_CPLR_MINOR_MINGW32
#	define XIEITE_CPLR_MINOR_MINGW32 __MINGW32_MINOR_VERSION
#endif

#ifdef __MINGW64__
#	include <windows.h>

#	undef XIEITE_CPLR_TYPE_MINGW_W64
#	define XIEITE_CPLR_TYPE_MINGW_W64 1

#	undef XIEITE_CPLR_MAJOR_MINGW_W64
#	define XIEITE_CPLR_MAJOR_MINGW_W64 __MINGW64_VERSION_MAJOR

#	undef XIEITE_CPLR_MINOR_MINGW_W64
#	define XIEITE_CPLR_MINOR_MINGW_W64 __MINGW64_VERSION_MINOR

#	undef XIEITE_CPLR_PATCH_MINGW_W64
#	define XIEITE_CPLR_PATCH_MINGW_W64
#endif

#if defined(sgi) || defined(__sgi)
#	undef XIEITE_CPLR_TYPE_MIPSPRO
#	define XIEITE_CPLR_TYPE_MIPSPRO 1

#	ifdef _SGI_COMPILER_VERSION
#		undef XIEITE_CPLR_MAJOR_MIPSPRO
#		define XIEITE_CPLR_MAJOR_MIPSPRO (_SGI_COMPILER_VERSION / 100)

#		undef XIEITE_CPLR_MINOR_MIPSPRO
#		define XIEITE_CPLR_MINOR_MIPSPRO (_SGI_COMPILER_VERSION % 100 / 10)

#		undef XIEITE_CPLR_PATCH_MIPSPRO
#		define XIEITE_CPLR_PATCH_MIPSPRO (_SGI_COMPILER_VERSION % 10)
#	elifdef _COMPILER_VERSION
#		undef XIEITE_CPLR_MAJOR_MIPSPRO
#		define XIEITE_CPLR_MAJOR_MIPSPRO (_COMPILER_VERSION / 100)

#		undef XIEITE_CPLR_MINOR_MIPSPRO
#		define XIEITE_CPLR_MINOR_MIPSPRO (_COMPILER_VERSION % 100 / 10)

#		undef XIEITE_CPLR_PATCH_MIPSPRO
#		define XIEITE_CPLR_PATCH_MIPSPRO (_COMPILER_VERSION % 10)
#	endif
#endif

#ifdef MIRACLE
#	undef XIEITE_CPLR_TYPE_MIRACLE_C
#	define XIEITE_CPLR_TYPE_MIRACLE_C 1
#endif

#if defined(MPW_C) || defined(MPW_CPLUS) || defined(__MRC__)
#	undef XIEITE_CPLR_TYPE_MPW
#	define XIEITE_CPLR_TYPE_MPW 1

#	undef XIEITE_CPLR_MAJOR_MPW
#	define XIEITE_CPLR_MAJOR_MPW (__MRC__ / 0x100)

#	undef XIEITE_CPLR_MINOR_MPW
#	define XIEITE_CPLR_MINOR_MPW (__MRC__ % 0x100)
#endif

#ifdef _MSC_VER
#	undef XIEITE_CPLR_TYPE_MSVC
#	define XIEITE_CPLR_TYPE_MSVC 1

#	undef XIEITE_CPLR_MAJOR_MSVC
#	define XIEITE_CPLR_MAJOR_MSVC (_MSC_FULL_VER / 10000000)

#	undef XIEITE_CPLR_MINOR_MSVC
#	define XIEITE_CPLR_MINOR_MSVC (_MSC_FULL_VER % 10000000 / 100000)

#	undef XIEITE_CPLR_PATCH_MSVC
#	define XIEITE_CPLR_PATCH_MSVC (_MSC_FULL_VER % 100000)
#endif

#ifdef __CC_NORCROFT
#	undef XIEITE_CPLR_TYPE_NORCROFT_C
#	define XIEITE_CPLR_TYPE_NORCROFT_C 1
#endif

#ifdef __NVCOMPILER
#	undef XIEITE_CPLR_TYPE_NVIDIA_HPC
#	define XIEITE_CPLR_TYPE_NVIDIA_HPC 1
#endif

#ifdef __NVCC__
#	undef XIEITE_CPLR_TYPE_NVCC
#	define XIEITE_CPLR_TYPE_NVCC 1

#	undef XIEITE_CPLR_MAJOR_NVCC
#	define XIEITE_CPLR_MAJOR_NVCC __CUDACC_VER_MAJOR__

#	undef XIEITE_CPLR_MINOR_NVCC
#	define XIEITE_CPLR_MINOR_NVCC __CUDACC_VER_MINOR__

#	undef XIEITE_CPLR_PATCH_NVCC
#	define XIEITE_CPLR_PATCH_NVCC __CUDACC_VER_BUILD__
#endif

#ifdef __NWCC__
#	undef XIEITE_CPLR_TYPE_NWCC
#	define XIEITE_CPLR_TYPE_NWCC 1
#endif

#if defined(__OPEN64__) || defined(__OPENCC__)
#	undef XIEITE_CPLR_TYPE_OPEN64
#	define XIEITE_CPLR_TYPE_OPEN64 1

#	undef XIEITE_CPLR_MAJOR_OPEN64
#	define XIEITE_CPLR_MAJOR_OPEN64 __OPENCC__

#	undef XIEITE_CPLR_MINOR_OPEN64
#	define XIEITE_CPLR_MINOR_OPEN64 __OPENCC_MINOR__

#	undef XIEITE_CPLR_PATCH_OPEN64
#	define XIEITE_CPLR_PATCH_OPEN64 __OPENCC_PATCHLEVEL__
#endif

#ifdef _OPENACC
#	undef XIEITE_CPLR_TYPE_OPENACC
#	define XIEITE_CPLR_TYPE_OPENACC 1
#endif

#ifdef _SCO_DS
#	undef XIEITE_CPLR_TYPE_OPENSERVER
#	define XIEITE_CPLR_TYPE_OPENSERVER 1
#endif

#ifdef __PACIFIC__
#	undef XIEITE_CPLR_TYPE_PACIFIC_C
#	define XIEITE_CPLR_TYPE_PACIFIC_C 1
#endif

#ifdef _PACC_VER
#	undef XIEITE_CPLR_TYPE_PALM
#	define XIEITE_CPLR_TYPE_PALM 1

#	undef XIEITE_CPLR_MAJOR_PALM
#	define XIEITE_CPLR_MAJOR_PALM (_PACC_VER / 0x10000000)

#	undef XIEITE_CPLR_MINOR_PALM
#	define XIEITE_CPLR_MINOR_PALM (_PACC_VER % 0x10000000 / 0x100000)

#	undef XIEITE_CPLR_PATCH_PALM
#	define XIEITE_CPLR_PATCH_PALM (_PACC_VER % 0x100000 / 0x1000)
#endif

#ifdef __POCC__
#	undef XIEITE_CPLR_TYPE_PELLES_C
#	define XIEITE_CPLR_TYPE_PELLES_C 1

#	undef XIEITE_CPLR_MAJOR_PELLES_C
#	define XIEITE_CPLR_MAJOR_PELLES_C (__POCC__ / 100)

#	undef XIEITE_CPLR_MINOR_PELLES_C
#	define XIEITE_CPLR_MINOR_PELLES_C (__POCC__ % 100)
#endif

#ifdef __PGI
#	undef XIEITE_CPLR_TYPE_PGI
#	define XIEITE_CPLR_TYPE_PGI 1

#	undef XIEITE_CPLR_MAJOR_PGI
#	define XIEITE_CPLR_MAJOR_PGI __PGIC__

#	undef XIEITE_CPLR_MINOR_PGI
#	define XIEITE_CPLR_MINOR_PGI __PGIC_MINOR__

#	undef XIEITE_CPLR_PATCH_PGI
#	define XIEITE_CPLR_PATCH_PGI __PGIC_PATCHLEVEL__
#endif

#ifdef ORA_PROC
#	undef XIEITE_CPLR_TYPE_PRO_C
#	define XIEITE_CPLR_TYPE_PRO_C 1
#endif

#if defined(__HITACHI__) || defined(__RENESAS__)
#	undef XIEITE_CPLR_TYPE_RENESAS
#	define XIEITE_CPLR_TYPE_RENESAS 1

#	undef XIEITE_CPLR_MAJOR_RENESAS
#	define XIEITE_CPLR_MAJOR_RENESAS (__RENESAS_VERSION___ / 0x1000000)

#	undef XIEITE_CPLR_MINOR_RENESAS
#	define XIEITE_CPLR_MINOR_RENESAS (__RENESAS_VERSION___ % 0x1000000 / 0x10000)

#	undef XIEITE_CPLR_PATCH_RENESAS
#	define XIEITE_CPLR_PATCH_RENESAS (__RENESAS_VERSION___ % 0x10000 / 0x100)
#endif

#if defined(SDCC) || defined(__SDCC)
#	undef XIEITE_CPLR_TYPE_SDCC
#	define XIEITE_CPLR_TYPE_SDCC 1

#	undef XIEITE_CPLR_MAJOR_SDCC
#	undef XIEITE_CPLR_MINOR_SDCC
#	undef XIEITE_CPLR_PATCH_SDCC
#	ifdef SDCC
#		define XIEITE_CPLR_MAJOR_SDCC (SDCC / 100)
#		define XIEITE_CPLR_MINOR_SDCC (SDCC % 100 / 10)
#		define XIEITE_CPLR_PATCH_SDCC (SDCC % 10)
#	elifdef __SDCC
#		define XIEITE_CPLR_MAJOR_SDCC (__SDCC / 100)
#		define XIEITE_CPLR_MINOR_SDCC (__SDCC % 100 / 10)
#		define XIEITE_CPLR_PATCH_SDCC (__SDCC % 10)
#	else
#		define XIEITE_CPLR_MAJOR_SDCC __SDCC_VERSION_MAJOR
#		define XIEITE_CPLR_MINOR_SDCC __SDCC_VERSION_MINOR
#		define XIEITE_CPLR_MINOR_SDCC __SDCC_VERSION_PATCH
#	endif
#endif

#ifdef __SNC__
#	undef XIEITE_CPLR_TYPE_SNC
#	define XIEITE_CPLR_TYPE_SNC 1
#endif

#ifdef __VOSC__
#	undef XIEITE_CPLR_TYPE_STRATUS_VOS_C
#	define XIEITE_CPLR_TYPE_STRATUS_VOS_C 1
#endif

#ifdef __SUNPRO_C
#	undef XIEITE_CPLR_TYPE_SUNPRO_C
#	define XIEITE_CPLR_TYPE_SUNPRO_C 1

#	undef XIEITE_CPLR_MAJOR_SUNPRO_C
#	define XIEITE_CPLR_MAJOR_SUNPRO_C (__SUNPRO_C / 0x1000)

#	undef XIEITE_CPLR_MINOR_SUNPRO_C
#	define XIEITE_CPLR_MINOR_SUNPRO_C (__SUNPRO_C % 0x1000 / 0x10)

#	undef XIEITE_CPLR_PATCH_SUNPRO_C
#	define XIEITE_CPLR_PATCH_SUNPRO_C (__SUNPRO_C % 0x10)
#endif

#ifdef __SUNPRO_CC
#	undef XIEITE_CPLR_TYPE_SUNPRO_CPP
#	define XIEITE_CPLR_TYPE_SUNPRO_CPP 1

#	undef XIEITE_CPLR_MAJOR_SUNPRO_CPP
#	define XIEITE_CPLR_MAJOR_SUNPRO_CPP (__SUNPRO_CC / 0x1000)

#	undef XIEITE_CPLR_MINOR_SUNPRO_CPP
#	define XIEITE_CPLR_MINOR_SUNPRO_CPP (__SUNPRO_CC % 0x1000 / 0x10)

#	undef XIEITE_CPLR_PATCH_SUNPRO_CPP
#	define XIEITE_CPLR_PATCH_SUNPRO_CPP (__SUNPRO_CC % 0x10)
#endif

#ifdef __SC__
#	undef XIEITE_CPLR_TYPE_SYMANTEC_CPP
#	define XIEITE_CPLR_TYPE_SYMANTEC_CPP 1

#	undef XIEITE_CPLR_MAJOR_SYMANTEC_CPP
#	define XIEITE_CPLR_MAJOR_SYMANTEC_CPP (__SC__ / 0x100)

#	undef XIEITE_CPLR_MINOR_SYMANTEC_CPP
#	define XIEITE_CPLR_MINOR_SYMANTEC_CPP (__SC__ % 0x100)
#endif

#ifdef __TINYC__
#	undef XIEITE_CPLR_TYPE_TCC
#	define XIEITE_CPLR_TYPE_TCC 1
#endif

#ifdef __TenDRA__
#	undef XIEITE_CPLR_TYPE_TENDRA
#	define XIEITE_CPLR_TYPE_TENDRA 1
#endif

#ifdef _TMS320C6X
#	undef XIEITE_CPLR_TYPE_TI_CGT
#	define XIEITE_CPLR_TYPE_TI_CGT 1

#	undef XIEITE_CPLR_MAJOR_TI_CGT
#	define XIEITE_CPLR_MAJOR_TI_CGT (__TI_COMPILER_VERSION___ / 1000000)

#	undef XIEITE_CPLR_MINOR_TI_CGT
#	define XIEITE_CPLR_MINOR_TI_CGT (__TI_COMPILER_VERSION___ % 1000000 / 1000)

#	undef XIEITE_CPLR_PATCH_TI_CGT
#	define XIEITE_CPLR_PATCH_TI_CGT (__TI_COMPILER_VERSION___ % 1000)
#endif

#ifdef __MSP430__
#	undef XIEITE_CPLR_TYPE_TI_CL430
#	define XIEITE_CPLR_TYPE_TI_CL430 1

#	undef XIEITE_CPLR_MAJOR_TI_CL430
#	define XIEITE_CPLR_MAJOR_TI_CL430 (__TI_COMPILER_VERSION___ / 1000000)

#	undef XIEITE_CPLR_MINOR_TI_CL430
#	define XIEITE_CPLR_MINOR_TI_CL430 (__TI_COMPILER_VERSION___ % 1000000 / 1000)

#	undef XIEITE_CPLR_PATCH_TI_CL430
#	define XIEITE_CPLR_PATCH_TI_CL430 (__TI_COMPILER_VERSION___ % 1000)
#endif

#ifdef __TURBOC__
#	undef XIEITE_CPLR_TYPE_TURBO
#	define XIEITE_CPLR_TYPE_TURBO 1

#	undef XIEITE_CPLR_MAJOR_TURBO
#	define XIEITE_CPLR_MAJOR_TURBO (__TURBOC__ / 0x100)

#	undef XIEITE_CPLR_MINOR_TURBO
#	define XIEITE_CPLR_MINOR_TURBO (__TURBOC__ % 0x100)
#endif

#ifdef _UCC
#	undef XIEITE_CPLR_TYPE_ULTIMATE
#	define XIEITE_CPLR_TYPE_ULTIMATE 1

#	undef XIEITE_CPLR_MAJOR_ULTIMATE
#	define XIEITE_CPLR_MAJOR_ULTIMATE _MAJOR_REV

#	undef XIEITE_CPLR_MINOR_ULTIMATE
#	define XIEITE_CPLR_MINOR_ULTIMATE _MINOR_REV
#endif

#ifdef __USLC__
#	undef XIEITE_CPLR_TYPE_USL_C
#	define XIEITE_CPLR_TYPE_USL_C 1

#	undef XIEITE_CPLR_MAJOR_USL_C
#	define XIEITE_CPLR_MAJOR_USL_C (__SCO_VERSION___ / 100000000)

#	undef XIEITE_CPLR_MINOR_USL_C
#	define XIEITE_CPLR_MINOR_USL_C (__SCO_VERSION___ % 100000000 / 1000000)
#endif

#ifdef __VBCC__
#	undef XIEITE_CPLR_TYPE_VBCC
#	define XIEITE_CPLR_TYPE_VBCC 1
#endif

#ifdef __WATCOMC__
#	undef XIEITE_CPLR_TYPE_WATCOM
#	define XIEITE_CPLR_TYPE_WATCOM 1

#	undef XIEITE_CPLR_MAJOR_WATCOM
#	define XIEITE_CPLR_MAJOR_WATCOM (__WATCOMC__ / 100)

#	undef XIEITE_CPLR_MINOR_WATCOM
#	define XIEITE_CPLR_MINOR_WATCOM (__WATCOMC__ % 100)
#endif

#ifdef __XC8
#	undef XIEITE_CPLR_TYPE_XC8
#	define XIEITE_CPLR_TYPE_XC8 1

#	ifdef __XC8_VERSION
#		undef XIEITE_CPLR_MAJOR_XC8
#		define XIEITE_CPLR_MAJOR_XC8 (__XC8_VERSION / 1000)

#		undef XIEITE_CPLR_MINOR_XC8
#		define XIEITE_CPLR_MINOR_XC8 (__XC8_VERSION % 1000 / 10)

#		undef XIEITE_CPLR_MAJOR_XC8
#		define XIEITE_CPLR_MAJOR_XC8 (__XC8_VERSION % 10)
#	endif
#endif

#if defined(C30) || defined(XC16) || defined(__C30) || defined(__C30__) || defined(__XC16) || defined(__XC16__) || defined(__dsPIC30__) || defined(__dsPICC30) || defined(dsPIC30)
#	undef XIEITE_CPLR_TYPE_XC16
#	define XIEITE_CPLR_TYPE_XC16 1

#	ifdef __XC32_VERSION
#		undef XIEITE_CPLR_MAJOR_XC32
#		define XIEITE_CPLR_MAJOR_XC32 (__XC32_VERSION / 1000)

#		undef XIEITE_CPLR_MINOR_XC32
#		define XIEITE_CPLR_MINOR_XC32 (__XC32_VERSION % 1000 / 10)

#		undef XIEITE_CPLR_MAJOR_XC32
#		define XIEITE_CPLR_MAJOR_XC32 (__XC32_VERSION % 10)
#	elifdef __C32_VERSION__
#		undef XIEITE_CPLR_PATCH_XC32
#		define XIEITE_CPLR_PATCH_XC32 (__C32_VERSION__ / 1000)

#		undef XIEITE_CPLR_MINOR_XC32
#		define XIEITE_CPLR_MINOR_XC32 (__C32_VERSION__ % 1000 / 10)

#		undef XIEITE_CPLR_PATCH_XC32
#		define XIEITE_CPLR_PATCH_XC32 (__C32_VERSION__ % 10)
#	endif
#endif

#ifdef __XC32
#	undef XIEITE_CPLR_TYPE_XC32
#	define XIEITE_CPLR_TYPE_XC32 1

#	ifdef __XC32_VERSION
#		undef XIEITE_CPLR_MAJOR_XC32
#		define XIEITE_CPLR_MAJOR_XC32 (__XC32_VERSION / 1000)

#		undef XIEITE_CPLR_MINOR_XC32
#		define XIEITE_CPLR_MINOR_XC32 (__XC32_VERSION % 1000 / 10)

#		undef XIEITE_CPLR_MAJOR_XC32
#		define XIEITE_CPLR_MAJOR_XC32 (__XC32_VERSION % 10)
#	elifdef __C32_VERSION__
#		undef XIEITE_CPLR_PATCH_XC32
#		define XIEITE_CPLR_PATCH_XC32 (__C32_VERSION__ / 1000)

#		undef XIEITE_CPLR_MINOR_XC32
#		define XIEITE_CPLR_MINOR_XC32 (__C32_VERSION__ % 1000 / 10)

#		undef XIEITE_CPLR_PATCH_XC32
#		define XIEITE_CPLR_PATCH_XC32 (__C32_VERSION__ % 10)
#	endif
#endif

#ifdef __DCC__
#	undef XIEITE_CPLR_TYPE_WIND_RIVER_DIAB
#	define XIEITE_CPLR_TYPE_WIND_RIVER_DIAB 1

#	undef XIEITE_CPLR_MAJOR_WIND_RIVER_DIAB
#	define XIEITE_CPLR_MAJOR_WIND_RIVER_DIAB (__VERSION_NUMBER__ / 1000)

#	undef XIEITE_CPLR_MINOR_WIND_RIVER_DIAB
#	define XIEITE_CPLR_MINOR_WIND_RIVER_DIAB (__VERSION_NUMBER__ % 1000 / 100)

#	undef XIEITE_CPLR_PATCH_WIND_RIVER_DIAB
#	define XIEITE_CPLR_PATCH_WIND_RIVER_DIAB (__VERSION_NUMBER__ % 100)
#endif

#if defined(__IBMCPP__) || defined(__IBMC__) || defined(__ibmxl__) || defined(__xlC__) || defined(__xlc__)
#	undef XIEITE_CPLR_TYPE_XL
#	define XIEITE_CPLR_TYPE_XL 1

#	ifdef __COMPILER_VER__
#		undef XIEITE_CPLR_MAJOR_XL
#		define XIEITE_CPLR_MAJOR_XL (__COMPILER_VER__ / 0x1000000)

#		undef XIEITE_CPLR_MINOR_XL
#		define XIEITE_CPLR_MINOR_XL (__COMPILER_VER__ % 0x1000000 / 0x1000)

#		undef XIEITE_CPLR_PATCH_XL
#		define XIEITE_CPLR_PATCH_XL (__COMPILER_VER__ % 0x1000)
#	elifdef __IBMCPP__
#		undef XIEITE_CPLR_MAJOR_XL
#		define XIEITE_CPLR_MAJOR_XL (__IBMCPP__ / 100)

#		undef XIEITE_CPLR_MINOR_XL
#		define XIEITE_CPLR_MINOR_XL (__IBMCPP__ % 10 / 10)

#		undef XIEITE_CPLR_PATCH_XL
#		define XIEITE_CPLR_PATCH_XL (__IBMCPP__ % 10)
#	elifdef __xlC__
#		undef XIEITE_CPLR_MAJOR_XL
#		define XIEITE_CPLR_MAJOR_XL (__xlC__ / 0x100)

#		undef XIEITE_CPLR_MINOR_XL
#		define XIEITE_CPLR_MINOR_XL (__xlC__ % 0x100)
#	elifdef __xlc__
#		undef XIEITE_CPLR_MAJOR_XL
#		define XIEITE_CPLR_MAJOR_XL (__xlc__ / 0x100)

#		undef XIEITE_CPLR_MINOR_XL
#		define XIEITE_CPLR_MINOR_XL (__xlc__ % 0x100)
#	else
#		undef XIEITE_CPLR_MAJOR_XL
#		define XIEITE_CPLR_MAJOR_XL __ibmxl_version__

#		undef XIEITE_CPLR_MINOR_XL
#		define XIEITE_CPLR_MINOR_XL __ibmxl_release__

#		undef XIEITE_CPLR_PATCH_XL
#		define XIEITE_CPLR_PATCH_XL __ibmxl_modification__
#	endif
#endif

#ifdef __ZTC__
#	undef XIEITE_CPLR_TYPE_ZORTECH_CPP
#	define XIEITE_CPLR_TYPE_ZORTECH_CPP 1

#	undef XIEITE_CPLR_MAJOR_ZORTECH_CPP
#	define XIEITE_CPLR_MAJOR_ZORTECH_CPP (__ZTC__ / 0x100)

#	undef XIEITE_CPLR_MINOR_ZORTECH_CPP
#	define XIEITE_CPLR_MINOR_ZORTECH_CPP (__ZTC__ % 0x100 / 0x10)

#	undef XIEITE_CPLR_PATCH_ZORTECH_CPP
#	define XIEITE_CPLR_PATCH_ZORTECH_CPP (__ZTC__ % 0x10)
#endif

#if defined(SCCZ80) || defined(__SCCZ80)
#	undef XIEITE_CPLR_TYPE_Z88DK
#	define XIEITE_CPLR_TYPE_Z88DK 1
#endif

// https://github.com/cpredef/predef/blob/master/Compilers.md
// https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#nvcc-identification-macro
// Note: `XIEITE_CPLR_TYPE_OPENACC` detects a compiler standard
