#ifndef XIEITE_HEADER__MACROS__COMPILER_VERSION
#	define XIEITE_HEADER__MACROS__COMPILER_VERSION

#	include "../macros/compiler_type.hpp"

#	define XIEITE__COMPILER_VERSION__MAJOR 0
#	define XIEITE__COMPILER_VERSION__MINOR 0
#	define XIEITE__COMPILER_VERSION__PATCH 0

#	if XIEITE__COMPILER_TYPE__ACPP
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__HP_aCC / 10000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__HP_aCC % 10000 / 100)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__HP_aCC % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__ARM
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__ARMCC_VERSION / 100000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__ARMCC_VERSION % 100000 / 10000)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__ARMCC_VERSION % 10000 / 1000)
#	endif

#	if XIEITE__COMPILER_TYPE__AZTEC
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__VERSION / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__VERSION % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__C_TO_HARDWARE || XIEITE__COMPILER_TYPE__MICROBLAZE
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__VERSION___ / 1000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__VERSION___ % 1000)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH __REVISION__
#	endif

#	if XIEITE__COMPILER_TYPE__C166
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__C166__ / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__C166__ % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__C51
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__C51__ / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__C51__ % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__CARM
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__CA__ / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__CA__ % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__CC65
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__CC65__ / 0x100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__CC65__ % 0x100 / 0x10)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__CC65__ % 0x10)
#	endif

#	if XIEITE__COMPILER_TYPE__CLANG
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR __clang_major__

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR __clang_minor__

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH __clang_patchlevel__
#	endif

#	if XIEITE__COMPILER_TYPE__CODEWARRIOR
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__MWERKS__ / 0x1000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__MWERKS__ % 0x1000 / 0x100)
#		define XIEITE__COMPILER_VERSION__PATCH (__MWERKS__ % 0x100)
#	endif

#	if XIEITE__COMPILER_TYPE__COMEAU
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__COMO_VERSION___ / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__COMO_VERSION___ % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__COMPAQ_C
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__DECC_VER / 10000000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__DECC_VER % 10000000 / 100000)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__DECC_VER % 10000)
#	endif

#	if XIEITE__COMPILER_TYPE__COMPAQ_CPP
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__DECCXX_VER / 10000000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__DECCXX_VER % 10000000 / 100000)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__DECCXX_VER % 10000)
#	endif

#	if XIEITE__COMPILER_TYPE__CRAY
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR _RELEASE

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR _RELEASE_MINOR
#	endif

#	if XIEITE__COMPILER_TYPE__DIAB
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__VERSION__NUMBER__ / 1000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__VERSION__NUMBER__ % 1000 / 100)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__VERSION__NUMBER__ % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__DIGITAL_MARS
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__DMC__ / 0x100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__DMC__ % 0x100 / 0x10)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__DMC__ % 0x10)
#	endif

#	if XIEITE__COMPILER_TYPE__DIGNUS
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__SYSC_VER__ / 10000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__SYSC_VER__ % 10000 / 100)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__SYSC_VER__ % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__DJGPP
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR __DJGPP__

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR __DJGPP_MINOR__
#	endif

#	if XIEITE__COMPILER_TYPE__EDG
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__EDG_VERSION___ / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__EDG_VERSION___ % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__EKOPATH
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR __PATHCC__

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR __PATHCC_MINOR__

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH __PATHCC_PATCHLEVEL__
#	endif

#	if XIEITE__COMPILER_TYPE__GCC
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR __GNUC__

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR __GNUC_MINOR__

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH __GNUC_PATCHLEVEL__
#	endif

#	if XIEITE__COMPILER_TYPE__GREEN_HILLS
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__GHS_VERSION__NUMBER__ / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__GHS_VERSION__NUMBER__ % 100 / 10)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__GHS_VERSION__NUMBER__ % 10)
#	endif

#	if XIEITE__COMPILER_TYPE__IAR
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__VER__ / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__VER__ % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__INTEL
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__INTEL_COMPILER / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__INTEL_COMPILER % 100 / 10)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__INTEL_COMPILER % 10)
#	endif

#	if XIEITE__COMPILER_TYPE__KAI
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__KCC_VERSION / 0x1000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__KCC_VERSION % 0x1000 / 0x100)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__KCC_VERSION % 0x100)
#	endif

#	if XIEITE__COMPILER_TYPE__MACINTOSH_PROGRAMMERS_WORKSHOP
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__MRC__ / 0x100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__MRC__ % 0x100)
#	endif

#	if XIEITE__COMPILER_TYPE__MINGW32
#		include <windows.h>

#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR __MINGW32_MAJOR_VERSION

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR __MINGW32_MINOR_VERSION
#	endif

#	if XIEITE__COMPILER_TYPE__MINGW64
#		include <windows.h>

#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR __MINGW64_VERSION__MAJOR

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR __MINGW64_VERSION__MINOR
#	endif

#	if XIEITE__COMPILER_TYPE__MIPSPRO
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (_SGI_COMPILER_VERSION / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (_SGI_COMPILER_VERSION % 100 / 10)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (_SGI_COMPILER_VERSION % 10)
#	endif

#	if XIEITE__COMPILER_TYPE__OPEN64
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR __OPENCC__

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR __OPENCC_MINOR__
#	endif

#	if XIEITE__COMPILER_TYPE__PALM
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (_PACC_VER / 0x10000000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (_PACC_VER % 0x10000000 / 0x100000)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (_PACC_VER % 0x100000 / 0x1000)
#	endif

#	if XIEITE__COMPILER_TYPE__PELLES
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__POCC__ / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__POCC__ % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__PORTLAND_GROUP
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR __PGIC__

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR __PGIC_MINOR__

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH __PGIC_PATCHLEVEL__
#	endif

#	if XIEITE__COMPILER_TYPE__RENESAS
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__RENESAS_VERSION___ / 0x1000000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__RENESAS_VERSION___ % 0x1000000 / 0x10000)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__RENESAS_VERSION___ % 0x10000 / 0x100)
#	endif

#	if XIEITE__COMPILER_TYPE__SAS
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__SASC__ / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__SASC__ % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__SMALL_DEVICE
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (SDCC / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (SDCC % 100 / 10)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (SDCC % 10)
#	endif

#	if XIEITE__COMPILER_TYPE__SOLARIS_STUDIO_C
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__SUNPRO_C / 0x1000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__SUNPRO_C % 0x1000 / 0x10)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__SUNPRO_C % 0x10)
#	endif

#	if XIEITE__COMPILER_TYPE__SOLARIS_STUDIO_CPP
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__SUNPRO_CC / 0x1000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__SUNPRO_CC % 0x1000 / 0x10)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__SUNPRO_CC % 0x10)
#	endif

#	if XIEITE__COMPILER_TYPE__SYMANTEC
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__SC__ / 0x100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__SC__ % 0x100)
#	endif

#	if XIEITE__COMPILER_TYPE__TMS320
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__TI_COMPILER_VERSION___ / 1000000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__TI_COMPILER_VERSION___ % 1000000 / 1000)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__TI_COMPILER_VERSION___ % 1000)
#	endif

#	if XIEITE__COMPILER_TYPE__TURBO
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__TURBOC__ / 0x100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__TURBOC__ % 0x100)
#	endif

#	if XIEITE__COMPILER_TYPE__ULTIMATE
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR _MAJOR_REV

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR _MINOR_REV
#	endif

#	if XIEITE__COMPILER_TYPE__USL
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__SCO_VERSION___ / 100000000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__SCO_VERSION___ % 100000000 / 1000000)
#	endif

#	if XIEITE__COMPILER_TYPE__VISUAL
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (_MSC_FULL_VER / 10000000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (_MSC_FULL_VER % 10000000 / 100000)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (_MSC_FULL_VER % 100000)
#	endif

#	if XIEITE__COMPILER_TYPE__WATCOM
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__WATCOMC__ / 100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__WATCOMC__ % 100)
#	endif

#	if XIEITE__COMPILER_TYPE__XL_CLANG
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR __ibmxl_version__

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR __ibmxl_release__

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH __ibmxl_modification__
#	endif

#	if XIEITE__COMPILER_TYPE__XL_LEGACY
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__xlC__ / 0x100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__xlC__ % 0x100)
#	endif

#	if XIEITE__COMPILER_TYPE__Z_OS_XL_C || XIEITE__COMPILER_TYPE__Z_OS_XL_CPP
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__COMPILER_VER__ % 0x10000000 / 0x1000000)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__COMPILER_VER__ % 0x1000000 / 0x10000)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__COMPILER_VER__ % 0x10000 / 0x100)
#	endif

#	if XIEITE__COMPILER_TYPE__ZORTECH
#		undef XIEITE__COMPILER_VERSION__MAJOR
#		define XIEITE__COMPILER_VERSION__MAJOR (__ZTC__ / 0x100)

#		undef XIEITE__COMPILER_VERSION__MINOR
#		define XIEITE__COMPILER_VERSION__MINOR (__ZTC__ % 0x100 / 0x10)

#		undef XIEITE__COMPILER_VERSION__PATCH
#		define XIEITE__COMPILER_VERSION__PATCH (__ZTC__ % 0x10)
#	endif

#endif
