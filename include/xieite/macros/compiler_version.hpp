#ifndef XIEITE_HEADER_MACROS_COMPILER_VERSION
#	define XIEITE_HEADER_MACROS_COMPILER_VERSION

#	include "../macros/compiler_type.hpp"

#	define XIEITE_COMPILER_VERSION_MAJOR 0
#	define XIEITE_COMPILER_VERSION_MINOR 0
#	define XIEITE_COMPILER_VERSION_PATCH 0

#	define XIEITE_COMPILER_VERSION_LEAST(...) XIEITE_INTERNAL_COMPILER_VERSION_SELECT(__VA_ARGS__, XIEITE_INTERNAL_COMPILER_VERSION_LEAST_OVERLOAD(__VA_ARGS__), XIEITE_INTERNAL_COMPILER_VERSION_LEAST_OVERLOAD(__VA_ARGS__, 0), XIEITE_INTERNAL_COMPILER_VERSION_LEAST_OVERLOAD(__VA_ARGS__, 0, 0))
#	define XIEITE_COMPILER_VERSION_MOST(...) XIEITE_INTERNAL_COMPILER_VERSION_SELECT(__VA_ARGS__, XIEITE_INTERNAL_COMPILER_VERSION_MOST_OVERLOAD(__VA_ARGS__), XIEITE_INTERNAL_COMPILER_VERSION_MOST_OVERLOAD(__VA_ARGS__, 0), XIEITE_INTERNAL_COMPILER_VERSION_MOST_OVERLOAD(__VA_ARGS__, 0, 0))
#	define XIEITE_INTERNAL_COMPILER_VERSION_SELECT(_1, _2, _3, overload, ...) overload
#	define XIEITE_INTERNAL_COMPILER_VERSION_LEAST_OVERLOAD(major, minor, patch) ((XIEITE_COMPILER_VERSION_MAJOR > (major)) || (XIEITE_COMPILER_VERSION_MAJOR == (major)) && ((XIEITE_COMPILER_VERSION_MINOR > (minor) || (XIEITE_COMPILER_VERSION_MINOR == (minor)) && (XIEITE_COMPILER_VERSION_PATCH >= (patch)))))
#	define XIEITE_INTERNAL_COMPILER_VERSION_MOST_OVERLOAD(major, minor, patch) ((XIEITE_COMPILER_VERSION_MAJOR < (major)) || (XIEITE_COMPILER_VERSION_MAJOR == (major)) && ((XIEITE_COMPILER_VERSION_MINOR < (minor) || (XIEITE_COMPILER_VERSION_MINOR == (minor)) && (XIEITE_COMPILER_VERSION_PATCH <= (patch)))))

#	if XIEITE_COMPILER_TYPE_ACC
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__HP_aCC / 10000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__HP_aCC % 10000 / 100)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__HP_aCC % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_ARMCC
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__ARMCC_VERSION / 100000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__ARMCC_VERSION % 100000 / 10000)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__ARMCC_VERSION % 10000 / 1000)
#	endif

#	if XIEITE_COMPILER_TYPE_ALTIUM_C_TO_HARDWARE || XIEITE_COMPILER_TYPE_ALTIUM_MICROBLAZE_C
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__VERSION___ / 1000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__VERSION___ % 1000)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH __REVISION__
#	endif

#	if XIEITE_COMPILER_TYPE_AZTEC_C
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__VERSION / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__VERSION % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_CC65
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__CC65__ / 0x100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__CC65__ % 0x100 / 0x10)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__CC65__ % 0x10)
#	endif

#	if XIEITE_COMPILER_TYPE_CLANG
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR __clang_major__

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR __clang_minor__

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH __clang_patchlevel__
#	endif

#	if XIEITE_COMPILER_TYPE_CODEWARRIOR
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__MWERKS__ / 0x1000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__MWERKS__ % 0x1000 / 0x100)
#		define XIEITE_COMPILER_VERSION_PATCH (__MWERKS__ % 0x100)
#	endif

#	if XIEITE_COMPILER_TYPE_COMEAU_C_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__COMO_VERSION___ / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__COMO_VERSION___ % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_COMPAQ_C
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__DECC_VER / 10000000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__DECC_VER % 10000000 / 100000)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__DECC_VER % 10000)
#	endif

#	if XIEITE_COMPILER_TYPE_COMPAQ_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__DECCXX_VER / 10000000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__DECCXX_VER % 10000000 / 100000)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__DECCXX_VER % 10000)
#	endif

#	if XIEITE_COMPILER_TYPE_CRAY_C_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR _RELEASE

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR _RELEASE_MINOR
#	endif

#	if XIEITE_COMPILER_TYPE_DATALIGHT_C
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__DMC__ / 0x100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__DMC__ % 0x100 / 0x10)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__DMC__ % 0x10)
#	endif

#	if XIEITE_COMPILER_TYPE_DIGNUS_SYSTEMS_C
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__SYSC_VER__ / 10000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__SYSC_VER__ % 10000 / 100)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__SYSC_VER__ % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_DJGPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR __DJGPP__

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR __DJGPP_MINOR__
#	endif

#	if XIEITE_COMPILER_TYPE_ECCP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__EDG_VERSION___ / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__EDG_VERSION___ % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_EKOPATH
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR __PATHCC__

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR __PATHCC_MINOR__

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH __PATHCC_PATCHLEVEL__
#	endif

#	if XIEITE_COMPILER_TYPE_GCC
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR __GNUC__

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR __GNUC_MINOR__

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH __GNUC_PATCHLEVEL__
#	endif

#	if XIEITE_COMPILER_TYPE_GREEN_HILLS_C_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__GHS_VERSION__NUMBER__ / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__GHS_VERSION__NUMBER__ % 100 / 10)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__GHS_VERSION__NUMBER__ % 10)
#	endif

#	if XIEITE_COMPILER_TYPE_IAR_C_CPP_COMPILER
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__VER__ / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__VER__ % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_ICC
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__INTEL_COMPILER / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__INTEL_COMPILER % 100 / 10)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__INTEL_COMPILER % 10)
#	endif

#	if XIEITE_COMPILER_TYPE_ICX
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__INTEL_CLANG_COMPILER / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__INTEL_CLANG_COMPILER % 100 / 10)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__INTEL_CLANG_COMPILER % 10)
#	endif

#	if XIEITE_COMPILER_TYPE_KAI
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__KCC_VERSION / 0x1000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__KCC_VERSION % 0x1000 / 0x100)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__KCC_VERSION % 0x100)
#	endif

#	if XIEITE_COMPILER_TYPE_KEIL_C166
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__C166__ / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__C166__ % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_KEIL_C51
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__C51__ / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__C51__ % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_KEIL_CARM
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__CA__ / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__CA__ % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_MPW
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__MRC__ / 0x100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__MRC__ % 0x100)
#	endif

#	if XIEITE_COMPILER_TYPE_MINGW32
#		include <windows.h>

#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR __MINGW32_MAJOR_VERSION

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR __MINGW32_MINOR_VERSION
#	endif

#	if XIEITE_COMPILER_TYPE_MINGW_W64
#		include <windows.h>

#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR __MINGW64_VERSION_MAJOR

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR __MINGW64_VERSION_MINOR
#	endif

#	if XIEITE_COMPILER_TYPE_MIPSPRO
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (_SGI_COMPILER_VERSION / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (_SGI_COMPILER_VERSION % 100 / 10)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (_SGI_COMPILER_VERSION % 10)
#	endif

#	if XIEITE_COMPILER_TYPE_OPEN64
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR __OPENCC__

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR __OPENCC_MINOR__

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH __OPENCC_PATCHLEVEL__
#	endif

#	if XIEITE_COMPILER_TYPE_PALM_C_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (_PACC_VER / 0x10000000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (_PACC_VER % 0x10000000 / 0x100000)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (_PACC_VER % 0x100000 / 0x1000)
#	endif

#	if XIEITE_COMPILER_TYPE_PELLES_C
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__POCC__ / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__POCC__ % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_PGI_C_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR __PGIC__

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR __PGIC_MINOR__

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH __PGIC_PATCHLEVEL__
#	endif

#	if XIEITE_COMPILER_TYPE_RENESAS_C_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__RENESAS_VERSION___ / 0x1000000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__RENESAS_VERSION___ % 0x1000000 / 0x10000)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__RENESAS_VERSION___ % 0x10000 / 0x100)
#	endif

#	if XIEITE_COMPILER_TYPE_SAS_C_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__SASC__ / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__SASC__ % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_SDCC
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (SDCC / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (SDCC % 100 / 10)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (SDCC % 10)
#	endif

#	if XIEITE_COMPILER_TYPE_SOLARIS_STUDIO_C
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__SUNPRO_C / 0x1000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__SUNPRO_C % 0x1000 / 0x10)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__SUNPRO_C % 0x10)
#	endif

#	if XIEITE_COMPILER_TYPE_SUNPRO_COMPILERS
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__SUNPRO_CC / 0x1000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__SUNPRO_CC % 0x1000 / 0x10)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__SUNPRO_CC % 0x10)
#	endif

#	if XIEITE_COMPILER_TYPE_SYMANTEC_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__SC__ / 0x100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__SC__ % 0x100)
#	endif

#	if XIEITE_COMPILER_TYPE_TI_CGT
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__TI_COMPILER_VERSION___ / 1000000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__TI_COMPILER_VERSION___ % 1000000 / 1000)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__TI_COMPILER_VERSION___ % 1000)
#	endif

#	if XIEITE_COMPILER_TYPE_TURBO_C_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__TURBOC__ / 0x100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__TURBOC__ % 0x100)
#	endif

#	if XIEITE_COMPILER_TYPE_ULTIMATE_C_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR _MAJOR_REV

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR _MINOR_REV
#	endif

#	if XIEITE_COMPILER_TYPE_USL_C
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__SCO_VERSION___ / 100000000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__SCO_VERSION___ % 100000000 / 1000000)
#	endif

#	if XIEITE_COMPILER_TYPE_MSVC
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (_MSC_FULL_VER / 10000000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (_MSC_FULL_VER % 10000000 / 100000)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (_MSC_FULL_VER % 100000)
#	endif

#	if XIEITE_COMPILER_TYPE_WATCOM_C_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__WATCOMC__ / 100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__WATCOMC__ % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_WIND_RIVER_DIAB_COMPILER
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__VERSION__NUMBER__ / 1000)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__VERSION__NUMBER__ % 1000 / 100)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__VERSION__NUMBER__ % 100)
#	endif

#	if XIEITE_COMPILER_TYPE_XL_C_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR __ibmxl_version__

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR __ibmxl_release__

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH __ibmxl_modification__
#	endif

#	if XIEITE_COMPILER_TYPE_ZORTECH_CPP
#		undef XIEITE_COMPILER_VERSION_MAJOR
#		define XIEITE_COMPILER_VERSION_MAJOR (__ZTC__ / 0x100)

#		undef XIEITE_COMPILER_VERSION_MINOR
#		define XIEITE_COMPILER_VERSION_MINOR (__ZTC__ % 0x100 / 0x10)

#		undef XIEITE_COMPILER_VERSION_PATCH
#		define XIEITE_COMPILER_VERSION_PATCH (__ZTC__ % 0x10)
#	endif

#endif

// https://sourceforge.net/p/predef/wiki/Compilers/
