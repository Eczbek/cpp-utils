#pragma once

#include "../preprocessor/compiler.hpp"
#include "../preprocessor/pragma.hpp"
#include "../preprocessor/stringify.hpp"

#define XIEITE_DIAGNOSTIC_MESSAGE(_)
#define XIEITE_DIAGNOSTIC_WARN(_)
#define XIEITE_DIAGNOSTIC_ERROR(_)
#define XIEITE_DIAGNOSTIC_PUSH()
#define XIEITE_DIAGNOSTIC_POP()
#define XIEITE_DIAGNOSTIC_ENABLE_GCC(_)
#define XIEITE_DIAGNOSTIC_ENABLE_CLANG(_)
#define XIEITE_DIAGNOSTIC_ENABLE_MSVC(_)
#define XIEITE_DIAGNOSTIC_STRICT_GCC(_)
#define XIEITE_DIAGNOSTIC_STRICT_CLANG(_)
#define XIEITE_DIAGNOSTIC_STRICT_MSVC(_)
#define XIEITE_DIAGNOSTIC_DISABLE_GCC(_)
#define XIEITE_DIAGNOSTIC_DISABLE_CLANG(_)
#define XIEITE_DIAGNOSTIC_DISABLE_MSVC(_)

#if XIEITE_COMPILER_TYPE_GCC
#	undef XIEITE_DIAGNOSTIC_MESSAGE
#	define XIEITE_DIAGNOSTIC_MESSAGE(message_) XIEITE_PRAGMA(message message_)

#	undef XIEITE_DIAGNOSTIC_WARN
#	define XIEITE_DIAGNOSTIC_WARN(message_) XIEITE_PRAGMA(GCC warning message_)

#	undef XIEITE_DIAGNOSTIC_ERROR
#	define XIEITE_DIAGNOSTIC_ERROR(message_) XIEITE_PRAGMA(GCC error message_)

#	undef XIEITE_DIAGNOSTIC_PUSH
#	define XIEITE_DIAGNOSTIC_PUSH() XIEITE_PRAGMA(GCC diagnostic push)

#	undef XIEITE_DIAGNOSTIC_POP
#	define XIEITE_DIAGNOSTIC_POP() XIEITE_PRAGMA(GCC diagnostic pop)

#	undef XIEITE_DIAGNOSTIC_ENABLE_GCC
#	define XIEITE_DIAGNOSTIC_ENABLE_GCC(warning_) XIEITE_PRAGMA(GCC diagnostic warning XIEITE_STRINGIFY(warning_))

#	undef XIEITE_DIAGNOSTIC_STRICT_GCC
#	define XIEITE_DIAGNOSTIC_STRICT_GCC(warning_) XIEITE_PRAGMA(GCC diagnostic error XIEITE_STRINGIFY(warning_))

#	undef XIEITE_DIAGNOSTIC_DISABLE_GCC
#	define XIEITE_DIAGNOSTIC_DISABLE_GCC(warning_) XIEITE_PRAGMA(GCC diagnostic ignored XIEITE_STRINGIFY(warning_))
#elif XIEITE_COMPILER_TYPE_CLANG
#	undef XIEITE_DIAGNOSTIC_MESSAGE
#	define XIEITE_DIAGNOSTIC_MESSAGE(message_) XIEITE_PRAGMA(message message_)

#	undef XIEITE_DIAGNOSTIC_WARN
#	define XIEITE_DIAGNOSTIC_WARN(message_) XIEITE_PRAGMA(GCC warning message_)

#	undef XIEITE_DIAGNOSTIC_ERROR
#	define XIEITE_DIAGNOSTIC_ERROR(message_) XIEITE_PRAGMA(GCC error message_)

#	undef XIEITE_DIAGNOSTIC_PUSH
#	define XIEITE_DIAGNOSTIC_PUSH() XIEITE_PRAGMA(clang diagnostic push)

#	undef XIEITE_DIAGNOSTIC_POP
#	define XIEITE_DIAGNOSTIC_POP() XIEITE_PRAGMA(clang diagnostic pop)

#	undef XIEITE_DIAGNOSTIC_ENABLE_CLANG
#	define XIEITE_DIAGNOSTIC_ENABLE_CLANG(warning_) XIEITE_PRAGMA(clang diagnostic warning XIEITE_STRINGIFY(warning_))

#	undef XIEITE_DIAGNOSTIC_STRICT_CLANG
#	define XIEITE_DIAGNOSTIC_STRICT_CLANG(warning_) XIEITE_PRAGMA(clang diagnostic error XIEITE_STRINGIFY(warning_))

#	undef XIEITE_DIAGNOSTIC_DISABLE_CLANG
#	define XIEITE_DIAGNOSTIC_DISABLE_CLANG(warning_) XIEITE_PRAGMA(clang diagnostic ignored XIEITE_STRINGIFY(warning_))
#elif XIEITE_COMPILER_TYPE_MSVC
#	undef XIEITE_DIAGNOSTIC_MESSAGE
#	define XIEITE_DIAGNOSTIC_MESSAGE(message_) XIEITE_PRAGMA(message(message_))

#	undef XIEITE_DIAGNOSTIC_WARN
#	define XIEITE_DIAGNOSTIC_WARN(message_) XIEITE_PRAGMA(message("\x1B[31m" message_ "\x1B[0m"))

#	undef XIEITE_DIAGNOSTIC_ERROR
#	define XIEITE_DIAGNOSTIC_ERROR(message_) XIEITE_PRAGMA(message("\x1B[35m" message_ "\x1B[0m"))

#	undef XIEITE_DIAGNOSTIC_PUSH
#	define XIEITE_DIAGNOSTIC_PUSH() XIEITE_PRAGMA(warning(push))

#	undef XIEITE_DIAGNOSTIC_POP
#	define XIEITE_DIAGNOSTIC_POP() XIEITE_PRAGMA(warning(pop))

#	undef XIEITE_DIAGNOSTIC_ENABLE_MSVC
#	define XIEITE_DIAGNOSTIC_ENABLE_MSVC(warning_) XIEITE_PRAGMA(warning(default: warning_))

#	undef XIEITE_DIAGNOSTIC_STRICT_MSVC
#	define XIEITE_DIAGNOSTIC_STRICT_MSVC(warning_) XIEITE_PRAGMA(warning(error: warning_))

#	undef XIEITE_DIAGNOSTIC_DISABLE_MSVC
#	define XIEITE_DIAGNOSTIC_DISABLE_MSVC(warning_) XIEITE_PRAGMA(warning(disable: warning_))
#endif

// https://learn.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warnings-c4000-c5999
